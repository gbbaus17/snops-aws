{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Ubuntu 16.04 LTS JumpHost for use with F5 labs https://clouddocs.f5.com/training/community/",
    "Parameters": {
        "VPC": {
            "Description": "Existing F5 Lab VPC",
            "Type": "AWS::EC2::VPC::Id",
            "ConstraintDescription": "Run the F5 Lab Topology template first if it does not exist."
        },
        "UbuntuPassword": {
            "Default": "supernetops",
            "Description": "ubuntu User password for JumpHost RDP access",
            "Type": "String"
        },
        "InstanceType": {
            "AllowedValues": [
                "t2.medium",
                "t2.large",
                "m3.medium",
                "m3.large"
            ],
            "ConstraintDescription": "Subset of valid EC2 instance types for Lab JumpHost",
            "Default": "t2.large",
            "Description": "Size of the Ubuntu Instance |'t2.large' has 2 cores, 8Gb RAM @~11cents/hour",
            "Type": "String"
        },
        "CustomImageId": {
            "ConstraintDescription": "Must be a valid AMI Id",
            "Default": "ami-0d9c4a2f1c21c130d",
            "Description": "Please specify the 'Ubuntu 16.04 LTS' AMI Id that you have Agreed to T&Cs [eg, N.VA=ami-068ab34816099a0a9; SYD=ami-0d9c4a2f1c21c130d]",
            "MaxLength": 255,
            "MinLength": 1,
            "Type": "String"
        },
        "EBSVolumeSize": {
            "Description": "The size of the EBS volume for the instance",
            "Type": "String",
            "Default": "40"
        },
        "sshKey": {
            "Description": "Name of an existing EC2 KeyPair to enable SSH to the instance",
            "Type": "AWS::EC2::KeyPair::KeyName",
            "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
        },
        "ManagementSubnet": {
            "ConstraintDescription": "The subnet ID must be within an existing VPC",
            "Description": "Management Subnet Connectivity",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "ExternalSubnet": {
            "ConstraintDescription": "The subnet ID must be within an existing VPC",
            "Description": "External Subnet: To access the JumpHost/Client",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "JumpHostLandingPrivateIP": {
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})",
            "ConstraintDescription": "Must be a valid IP in External / Access Subnet",
            "Default": "10.1.20.20",
            "Description": "Jumhost / Client External vlan address- Lab Default is 10.1.20.20",
            "MaxLength": 18,
            "MinLength": 9,
            "Type": "String"
        },
        "JumpHostMngmtAccessIP": {
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})",
            "ConstraintDescription": "Must be a valid IP in Manangement Subnet",
            "Default": "10.1.1.20",
            "Description": "JumpHost Mngmt vlan address - Lab Default is 10.1.1.20",
            "MaxLength": 18,
            "MinLength": 9,
            "Type": "String"
        },
        "restrictedSrcAddress": {
            "Description": "The IPv4 address range that will be granted Remote RDP and Web Access to the Ubuntu instance",
            "Type": "String",
            "MinLength": "9",
            "MaxLength": "18",
            "Default": "0.0.0.0/0",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
        },
	    "TimeZone": {
		   "Default": "Australia/NSW",
		   "Description": "Olson TimeZone string from /usr/share/zoneinfo eg: America/Los_Angeles",
		   "Type": "String"
  }
    },
    "Resources": {
        "ExternalSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "GroupDescription": "Enable neccessary protocols",
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": {
                            "Ref": "restrictedSrcAddress"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "443",
                        "ToPort": "443",
                        "CidrIp": {
                            "Ref": "restrictedSrcAddress"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "2222",
                        "ToPort": "2222",
                        "CidrIp": {
                            "Ref": "restrictedSrcAddress"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "3389",
                        "ToPort": "3389",
                        "CidrIp": {
                            "Ref": "restrictedSrcAddress"
                        }
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "JumpHostSecuriytGroup"
                    }
                ]
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "5d5a4e1f-6916-4e1a-9857-37df8556389e"
                }
            }
        },
        "AllowAllSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "GroupDescription": "Enable All protocols",
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "icmp",
                        "FromPort": "-1",
                        "ToPort": "-1",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "1",
                        "ToPort": "65535",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "udp",
                        "FromPort": "1",
                        "ToPort": "65535",
                        "CidrIp": "0.0.0.0/0"
                    }
                ],
			"Tags": [
				{
					"Key": "Name",
					"Value": {
						"Fn::Join": [
							"",
							[
								{
									"Ref": "AWS::StackName"
								},
								":AllowAll_Security_Group"
							]
						]
					}
				}
			]
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "3758dcee-1594-4478-b95b-6637968a812d"
                }
            }
        },
        "JumpHostEipAddress": {
            "Properties": {
                "Domain": "VPC"
            },
            "Type": "AWS::EC2::EIP",
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "2d6ab2c0-0c12-40ac-9a74-5e3c65551098"
                }
            }
        },
        "JumpHostEth0Interface": {
            "Type": "AWS::EC2::NetworkInterface",
            "Properties": {
                "SubnetId": {
                    "Ref": "ExternalSubnet"
                },
                "Description": "Interface for RDP Access and Client traffic",
                "GroupSet": [
                    {
                        "Ref": "ExternalSecurityGroup"
                    }
                ],
				"PrivateIpAddresses": [
					{
						"PrivateIpAddress": {
							"Ref": "JumpHostLandingPrivateIP"
						},
						"Primary": "true"
					}
				],			
                "SourceDestCheck": "true",
                "Tags": [
                    {
                        "Key": "Network",
                        "Value": "F5Labs:JumpHost:Public:Primary:eth0"
                    },
                    {
                        "Key": "Name",
                        "Value": "F5Labs:JumpHost:Public:Primary:eth0"
                    }
                ]
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "7cc88848-aa14-4eea-8486-a959122a4f9f"
                }
            }
        },
        "JumpHostEipAssociation": {
            "Type": "AWS::EC2::EIPAssociation",
            "Properties": {
                "AllocationId": {
                    "Fn::GetAtt": [
                        "JumpHostEipAddress",
                        "AllocationId"
                    ]
                },
                "NetworkInterfaceId": {
                    "Ref": "JumpHostEth0Interface"
                }	
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "3cfbb825-a9be-4a95-becf-8f5dcfe5ebfc"
                }
            }
        },
        "UbuntuInstance": {
            "Type": "AWS::EC2::Instance",
            "Metadata": {
                "AWS::CloudFormation::Init": {
                    "config": {
					"files": {
					   "/home/ubuntu/set-nics-and-hosts.sh": {
						"content": {
							 "Fn::Join": [
							  "",
							  [
							   "#!/bin/bash\n",
								"ifconfig eth0 ", { "Ref": "JumpHostLandingPrivateIP" }, " netmask 255.255.255.0\n",
								"ifconfig eth1 ", {	"Ref": "JumpHostMngmtAccessIP" }, " netmask 255.255.255.0\n",
								"MYVARIP1=\"", { "Ref": "JumpHostMngmtAccessIP"	}, "\"\n",
								"MYVAR1=$(sed 's/\\./-/g' <<< ${MYVARIP1})\n",
								"echo \"${MYVARIP1} ip-${MYVAR1}\" >> /etc/hosts\n",
								"MYVARIP2=\"", { "Ref": "JumpHostLandingPrivateIP" }, "\"\n",
								"MYVAR2=$(sed 's/\\./-/g' <<< ${MYVARIP2})\n",
								"echo \"${MYVARIP2} ip-${MYVAR2}\" >> /etc/hosts\n"
							  ]
							 ]
							},
						"group": "root",
						"mode": "000755",
						"owner": "root"
					   },
					   "/home/ubuntu/nics-ifconfig-to-startup.sh": {
						"content": {
							 "Fn::Join": [
							  "",
							  [
							   "#!/bin/bash\n",
							   "echo \"#!/bin/sh -e\" > /etc/rc.local\n",
							   "echo \"ifconfig eth0 ", { "Ref": "JumpHostLandingPrivateIP" }, " netmask 255.255.255.0\" >> /etc/rc.local\n",
							   "echo \"ifconfig eth1 ", { "Ref": "JumpHostMngmtAccessIP" }, " netmask 255.255.255.0\" >> /etc/rc.local\n"
							  ]
							 ]
							},
						"group": "root",
						"mode": "000755",
						"owner": "root"
					   },					   
					   "/home/ubuntu/interfaces": {
							"content": {
								"Fn::Join": [
									"",
									[
									"# By default cfn-init uses /etc/network/interfaces.d/50-cloud-init.cfg\n",
									"# we need to overide this and set our static addresses\n",
									"\n",
									"auto lo\n",
									"iface lo inet loopback\n",
									"\n",
									"auto eth0\n",
									"iface eth0 inet static\n",
									"        address ",
									{
										"Ref": "JumpHostLandingPrivateIP"
									},
									"\n",
									"        netmask 255.255.255.0\n",
									"        gateway 10.1.20.1\n",
									"        dns-nameservers 8.8.8.8 8.8.4.4\n",
									"        up route add -net 10.1.10.0 netmask 255.255.255.0 gw 10.1.20.20 dev eth0\n",
									"\n",
									"auto eth1\n",
									"iface eth1 inet static\n",
									"        address ",
									{
										"Ref": "JumpHostMngmtAccessIP"
									},
									"\n",
									"        netmask 255.255.255.0\n",
									"\n"
									]
								]
							},
							"group": "root",
							"mode": "000444",
							"owner": "root"
						},
					   "/home/ubuntu/SFTP_Start_instructions.txt": {
						"content": {
							 "Fn::Join": [
							  "",
							  [
							   "echo \"#To setup a SFTP server for file uploads (optional)  - do the following:\n",
							   "echo \"# ... where User=sftpuser and Password =supersecretpassword01\n",
							   "echo \"#\n",
							   "echo \"Run: sudo docker run -p 2222:22 -d --name sftp_f5lab atmoz/sftp sftpuser:supersecretpassword01:::upload\" > /home/ubuntu/SFTP_Start_instructions.txt\n",
							   "echo \"#--------#\" >> /home/ubuntu/SFTP_Start_instructions.txt\n",
							   "echo \"#Connect to the docker container and change the upload directory permissions\" >> /home/ubuntu/SFTP_Start_instructions.txt\n",
							   "echo \"docker exec -it sftp_f5lab /bin/bash\" >> /home/ubuntu/SFTP_Start_instructions.txt\n",
							   "echo \"chmod 711 /home/sftpuser/upload\" >> /home/ubuntu/SFTP_Start_instructions.txt\n",
							   "echo \"(exit)  -- to diconnect from sftp docker\" >> /home/ubuntu/SFTP_Start_instructions.txt\n",
							   "echo \"#--------#\" >> /home/ubuntu/SFTP_Start_instructions.txt\n"
							  ]
							 ]
							},
						"group": "root",
						"mode": "000755",
						"owner": "root"
					   },
					   "/home/ubuntu/snops_docker_run_instructions.txt": {
						"content": {
							 "Fn::Join": [
							  "",
							  [
							   "echo \"#To start the Super-Netops Docker conatiner, run the following:\n",
							   "echo \"#\n",
							   "echo \"sudo docker run -p 8080:80 -p 2222:22 -p 10000:8080 --name snops_jenkins --rm -it -e SNOPS_GH_BRANCH=master f5devcentral/f5-super-netops-container:jenkins\" > /home/ubuntu/snops_docker_run_instructions.txt\n",
								"echo \"#\n"							   							   
							  ]
							 ]
							},
						"group": "root",
						"mode": "000755",
						"owner": "root"
					   }					   
				   },
					"commands": {
                            "000-just-cheching": {
                                "command": "touch /home/ubuntu/alert2-started-cloudinit-commands"
                            },
                            "001-unlink-timezone": {
                                "command": "unlink /etc/localtime"
                            },							
							"002-set-new-timezone": {
									"command": { 
									"Fn::Join": [
									  "", 
									   [							
										"ln -s /usr/share/zoneinfo/",
										{"Ref": "TimeZone"},
										" /etc/localtime"
									   ]
									  ]
								   }
							 },
                            "004-execute-nics-and-hosts": {
                                "command": "/home/ubuntu/set-nics-and-hosts.sh"
                            },
                            "005-write-nics-ifconfig-to-startup": {
                                "command": "/home/ubuntu/nics-ifconfig-to-startup.sh"
                            },								
							"006-update-apt": { 
								"command": "apt-get -y update" 
							},
							"008-setup-ubuntu-password": {
									"command": { 
									"Fn::Join": [
									  "", 
									   [
										"sh -c 'echo \"ubuntu:",
										{"Ref": "UbuntuPassword"},
										"\" | chpasswd'"
									   ]
									  ]
									}
							  },							
                            "010_install_git": {
                                "command": "apt-get -y install git"
                            },
                            "012-clone-repo": {
                                "command": "git clone -b master https://github.com/gbbaus17/snops-aws /home/ubuntu/F5-Lab"
                            },
                            "014-sleep-30": {
                                "command": "sleep 30"
                            },
                            "016-change-mod-setup-script": {
                                "command": "chmod 755 /home/ubuntu/F5-Lab/jumphost/snops_jumphost_setup-gbb.sh"
                            },
                            "018-sleep-5": {
                                "command": "sleep 5"
                            },							
                            "020-execute-jumphost-setup": {
                                "command": "/home/ubuntu/F5-Lab/jumphost/snops_jumphost_setup-gbb.sh"
                            }							
                        }
                    }
                },
                "AWS::CloudFormation::Designer": {
                    "id": "08d9f152-ed15-4260-b501-81ac90812b04"
                }
            },
            "Properties": {
                "ImageId": {
                    "Ref": "CustomImageId"
                },
                "InstanceType": {
                    "Ref": "InstanceType"
                },
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/sda1",
                        "Ebs": {
                            "VolumeSize": {
                                "Ref": "EBSVolumeSize"
                            }
                        }
                    }
                ],
                "KeyName": {
                    "Ref": "sshKey"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
								"F5Lab:",
                                    {
                                        "Ref": "AWS::StackName"
                                    }
                                ]
                            ]
                        }
                    },				
                    {
                        "Key": "SSHConnectivity",
						"Value": {
							"Fn::Join": [
								"",
								[
									"ssh -i your-aws-key.pem ubuntu@",
									{
										"Ref": "JumpHostEipAddress"
									}
								]
							]
						}
                    },
                    {
                        "Key": "RDPConnectivity",
						"Value": {
							"Fn::Join": [
								"",
								[
									"mstsc.exe /f /v:",
									{
										"Ref": "JumpHostEipAddress"
									}
								]
							]
						}
                    }					
                ],				
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash -xe\n",
                                "# Install the files and packages from the metadata\n",
                                "touch /home/ubuntu/alert1-of-5-started-cloudinit-userdata\n",
                                "apt-get -y update\n",
                                "apt-get -y install python-setuptools\n",
                                "easy_install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz\n",
                                "cfn-init -v ",
                                "         --stack ",
                                {
                                    "Ref": "AWS::StackName"
                                },
                                "         --resource UbuntuInstance ",
                                "         --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n"
                            ]
                        ]
                    }
                },
                "NetworkInterfaces": [
                    {
                        "NetworkInterfaceId": {
                            "Ref": "JumpHostEth0Interface"
                        },
                        "DeviceIndex": "0"
                    },
                    {
                        "NetworkInterfaceId": {
                            "Ref": "UbuntuEth1Interface"
                        },
                        "DeviceIndex": "1"
                    }
                ]
            }
        },
        "UbuntuEth1Interface": {
            "Type": "AWS::EC2::NetworkInterface",
            "Properties": {
                "SubnetId": {
                    "Ref": "ManagementSubnet"
                },
                "Description": "Interface for Management Access",
                "GroupSet": [
                    {
                        "Ref": "AllowAllSecurityGroup"
                    }
                ],
				"PrivateIpAddresses": [
					{
						"PrivateIpAddress": {
							"Ref": "JumpHostMngmtAccessIP"
						},
						"Primary": "true"
					}
				],					
                "SourceDestCheck": "true",
                "Tags": [
                    {
                        "Key": "Network",
                        "Value": "F5Labs:JumpHost:Internal:MngmtAccess:eth1"
                    },
                    {
                        "Key": "Name",
                        "Value": "F5Labs:JumpHost:Internal:MngmtAccess:eth1"
                    }
                ]
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "857ca6e7-e221-4908-87a0-568324f20ccb"
                }
            }
        }
    },
    "Outputs": {
        "JumpHostPublicIP": {
            "Description": "RDP Public IP - recommended to restrict access with Securty Group",
            "Value": {
                "Ref": "JumpHostEipAddress"
            }
        },
        "UbuntuRdpPassword": {
            "Description": "RDP Access setup password",
            "Value": {
                "Ref": "UbuntuPassword"
            }
        },
        "JumpHostSSH": {
            "Description": "ssh access to Ubuntu JumpHost",
            "Value": {
                "Fn::Join": [
                    "",
                    [
                        "ssh -i your-aws-key.pem ubuntu@",
                        {
                            "Ref": "JumpHostEipAddress"
                        }
                    ]
                ]
            }
        },
        "MstscExeCli": {
            "Description": "MS RDP Client launch command User=ubuntu",
            "Value": {
                "Fn::Join": [
                    "",
                    [
                        "mstsc.exe /f /v:",
                        {
                            "Ref": "JumpHostEipAddress"
                        }
                    ]
                ]
            }
        },
        "Region": {
            "Description": "AWS Region",
            "Value": {
                "Ref": "AWS::Region"
            }
        }
    },
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Note: You must first Accept Terms and Conditions for Ubuntu 16.04 LTS - Xenial HVM"
                    },
                    "Parameters": []
                },
                {
                    "Label": {
                        "default": "https://aws.amazon.com/marketplace/search/results?searchTerms=Ubuntu+16.04+LTS+%28HVM%29"
                    },
                    "Parameters": []
                },
                {
                    "Label": {
                        "default": "--------------------------------------------------------------------------------------------------------------------------------------------------"
                    },
                    "Parameters": []
                },
                {
                    "Label": {
                        "default": "This template assumes you have an External and Mngmt Subnet in CIDR 10.1.0.0/16"
                    },
                    "Parameters": []
                },
                {
                    "Label": {
                        "default": "The Lab TOPOLOGY template creates that for you. JumpHost Build takes ~10 min"
                    },
                    "Parameters": []
                },				
                {
                    "Label": {
                        "default": "--------------------------------------------------------------------------------------------------------------------------------------------------"
                    },
                    "Parameters": []
                },
                {
                    "Label": {
                        "default": "JUMPHOST CONFIGURATION"
                    },
                    "Parameters": [
                        "VPC",
                        "InstanceType",
                        "CustomImageId",
                        "EBSVolumeSize",
                        "sshKey",
                        "restrictedSrcAddress",
                        "UbuntuPassword",
                        "ExternalSubnet",
                        "JumpHostLandingPrivateIP",
                        "ManagementSubnet",
                        "JumpHostMngmtAccessIP",
						"TimeZone"						
                    ]
                }
            ],
            "ParameterLabels": {
                "VPC": {
                    "default": "F5 Lab VPC"
                },
                "InstanceType": {
                    "default": "Ubuntu instance"
                },
                "CustomImageId": {
                    "default": "Ubuntu AMI Image Id"
                },
                "EBSVolumeSize": {
                    "default": "EBS Volume Size"
                },
                "sshKey": {
                    "default": "KeyPair to enable SSH"
                },
                "ManagementSubnet": {
                    "default": "F5Lab Mgmt subnet"
                },
                "JumpHostMngmtAccessIP": {
                    "default": "F5Lab Mgmt subnet IP"
                },
                "ExternalSubnet": {
                    "default": "External subnet"
                },
                "JumpHostLandingPrivateIP": {
                    "default": "External subnet IP"
                },
                "restrictedSrcAddress": {
                    "default": "Restrict To"
                },
                "UbuntuPassword": {
                    "default": "Ubuntu password"
                },
				"TimeZone": {
					"default": "Timezone (Olson)"
				}			
            }
        },
        "AWS::CloudFormation::Designer": {
            "2d6ab2c0-0c12-40ac-9a74-5e3c65551098": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 140,
                    "y": 280
                },
                "z": 1,
                "embeds": []
            },
            "08d9f152-ed15-4260-b501-81ac90812b04": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 410,
                    "y": 280
                },
                "z": 1,
                "embeds": [],
                "isassociatedwith": [
                    "7cc88848-aa14-4eea-8486-a959122a4f9f",
                    "857ca6e7-e221-4908-87a0-568324f20ccb"
                ]
            },
            "5d5a4e1f-6916-4e1a-9857-37df8556389e": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 270,
                    "y": 160
                },
                "z": 1,
                "embeds": []
            },
            "3758dcee-1594-4478-b95b-6637968a812d": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 530,
                    "y": 170
                },
                "z": 1,
                "embeds": []
            },
            "857ca6e7-e221-4908-87a0-568324f20ccb": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 530,
                    "y": 280
                },
                "z": 1,
                "embeds": [],
                "isassociatedwith": [
                    "3758dcee-1594-4478-b95b-6637968a812d"
                ]
            },
            "7cc88848-aa14-4eea-8486-a959122a4f9f": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 270,
                    "y": 280
                },
                "z": 1,
                "embeds": [],
                "isassociatedwith": [
                    "5d5a4e1f-6916-4e1a-9857-37df8556389e"
                ]
            },
            "3cfbb825-a9be-4a95-becf-8f5dcfe5ebfc": {
                "source": {
                    "id": "2d6ab2c0-0c12-40ac-9a74-5e3c65551098"
                },
                "target": {
                    "id": "7cc88848-aa14-4eea-8486-a959122a4f9f"
                },
                "z": 1
            }
        }
    }
}