{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "This Cloud Formation Template creates a lab environment for the F5 Programmability/Super-NetOps Training Lab **WARNING** This template creates Amazon EC2 instances. You will be billed for the AWS resources used if you create a stack from this template. This template is supplied with no warranty or support.",
	
	 "Conditions": {
	  "optin": {
	   "Fn::Equals": [
		"Yes",
		{
		 "Ref": "allowUsageAnalytics"
		}
	   ]
	  }
	 },	

    "Parameters": {
        "sshKey": {
            "Description": "Name of an EC2 KeyPair to enable SSH access to the instance.",
            "Type": "AWS::EC2::KeyPair::KeyName",
            "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
        },

        "BigIpImageId": {
            "ConstraintDescription": "Must be a valid AMI Id",
            "Default": "ami-056a1aba66594cff9",
            "Description": "Please specify your Region BigIP AMI Id that you have Agreed to T&Cs. BYOL or PAYG [eg, PAYG: SYD v13.1=ami-056a1aba66594cff9]",
            "MaxLength": 255,
            "MinLength": 1,
            "Type": "String"
        },
        "WindowsImageId": {
            "ConstraintDescription": "Must be a valid AMI Id",
            "Default": "ami-027db56cee714db93",
            "Description": "Please specify the 'Windows Server 2016 Base image' AMI Id that you have Agreed to T&Cs [eg, Singapore=ami-0466364b7c95e4a7d; SYD=ami-027db56cee714db93]",
            "MaxLength": 255,
            "MinLength": 1,
            "Type": "String"
        },
        "LinuxImageId": {
            "ConstraintDescription": "Must be a valid AMI Id",
            "Default": "ami-0d9c4a2f1c21c130d",
            "Description": "Please specify the 'Ubuntu 16.04 LTS' AMI Id that you have Agreed to T&Cs [eg, N.VA=ami-068ab34816099a0a9; SYD=ami-0d9c4a2f1c21c130d]",
            "MaxLength": 255,
            "MinLength": 1,
            "Type": "String"
        },
		
	  "allowUsageAnalytics": {
	   "AllowedValues": [
		"Yes",
		"No"
	   ],
	   "Default": "No",
	   "Description": "This deployment can send anonymous statistics to F5 to help us determine how to improve our solutions. If you select **No** statistics are not sent.",
	   "Type": "String"
	  },
	  "application": {
	   "Default": "f5app",
	   "Description": "Name of the Application Tag",
	   "Type": "String"
	  },
	  "costcenter": {
	   "Default": "f5costcenter",
	   "Description": "Name of the Cost Center Tag",
	   "Type": "String"
	  },
	  "environment": {
	   "Default": "f5env",
	   "Description": "Name of the Environment Tag",
	   "Type": "String"
	  },
	  "group": {
	   "Default": "f5group",
	   "Description": "Name of the Group Tag",
	   "Type": "String"
	  },

	  "ntpServer": {
	   "Default": "0.pool.ntp.org",
	   "Description": "NTP server for this implementation",
	   "Type": "String"
	  },
	  "owner": {
	   "Default": "f5owner",
	   "Description": "Name of the Owner Tag",
	   "Type": "String"
	  },
	  "restrictedSrcAddress": {
	   "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
	   "ConstraintDescription": "Must be a valid IP CIDR range of the form x.x.x.x/x.",
	   "Description": " The IP address range used to RDP to Jumphost",
	   "MaxLength": "18",
	   "MinLength": "9",
	   "Type": "String",
	   "Default": "0.0.0.0/0"
	  },
	  "timezone": {
	   "Default": "Australia/NSW",
	   "Description": "Olson timezone string from /usr/share/zoneinfo",
	   "Type": "String"
	  }
		
	},
    "Resources": {
        "VPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": "10.1.0.0/16",
                "InstanceTenancy": "default",
                "EnableDnsSupport": "true",
                "EnableDnsHostnames": "false",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "F5SNOpsLab"
                    }
                ]
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "b34cfbdc-cf63-4791-aacc-7feab1316529"
                }
            }
        },
        "subnet1Az1": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": { "Ref": "VPC" },
                "AvailabilityZone": { "Fn::Select": [ "0",  { "Fn::GetAZs": "" }  ] },
                "CidrBlock": "10.1.20.0/24",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "External"
                    }
                ]
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "7f465369-153a-4d57-9031-5ee45fc694d1"
                }
            }
        },
        "subnet2Az1": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
               "VpcId": { "Ref": "VPC" },
                "AvailabilityZone": { "Fn::Select": [ "0",  { "Fn::GetAZs": "" }  ] },
                "CidrBlock": "10.1.10.0/24",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Internal"
                    }
                ]
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "42d8ba7a-0d77-448d-a598-b24e76b9a1a3"
                }
            }
        },
        "managementSubnetAz1": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
               "VpcId": { "Ref": "VPC" },
                "AvailabilityZone": { "Fn::Select": [ "0",  { "Fn::GetAZs": "" }  ] },
                "CidrBlock": "10.1.1.0/24",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Management"
                    }
                ]
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "6c9ba804-79d7-4236-95f2-f8556ed04429"
                }
            }
        },
        "IGW": {
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "F5SNOpsIGW"
                    }
                ]
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "a6060b4c-e2f6-41d5-ac4a-7510a08405a6"
                }
            }
        },
        "NATGW": {
            "Type": "AWS::EC2::NatGateway",
            "Properties": {
                "AllocationId": {
                    "Fn::GetAtt": [
                        "NATEIP",
                        "AllocationId"
                    ]
                },
                "SubnetId": {
                    "Ref": "AccessSubnet"
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "6dbd782d-d62a-4a45-abc5-065eb0b61320"
                }
            }
        },
        "aclc60e29a2": {
            "Type": "AWS::EC2::NetworkAcl",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "7b61b9e4-e0b3-45d7-8023-319e59961e54"
                }
            }
        },
        "RouteTableInternal": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "InternalF5SNOpsRT"
                    }
                ]
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "ca65f3c6-e112-4b19-8669-d1dc7df54060"
                }
            }
        },
        "RouteTableExternal": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "ExternalF5SNOpsRT"
                    }
                ]
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "6bcaea8e-b311-4306-8ddd-cebbcb20670d"
                }
            }
        },
        "ManagementSubnetRouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "managementSubnetAz1"
                },
                "RouteTableId": {
                    "Ref": "RouteTableInternal"
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "006ab98a-856c-4e89-9800-a19876f6abe5"
                }
            }
        },
        "InternalSubnetRouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "subnet2Az1"
                },
                "RouteTableId": {
                    "Ref": "RouteTableInternal"
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "a34ee59f-0bae-461d-ac3b-002e90e25cfe"
                }
            }
        },
        "ExternalSubnetRouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "subnet1Az1"
                },
                "RouteTableId": {
                    "Ref": "RouteTableInternal"
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "3f665185-7a7a-4cab-bcca-0701153a8210"
                }
            }
        },
        "AccessSubnetRouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "AccessSubnet"
                },
                "RouteTableId": {
                    "Ref": "RouteTableExternal"
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "c568ac5c-b88c-4f19-807e-73ca2169aebd"
                }
            }
        },
        "WindowsEIP": {
            "Type": "AWS::EC2::EIP",
            "DependsOn": [
                "gw1"
            ],
            "Properties": {
                "Domain": "vpc"
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "f10ffe67-f450-4ed4-aad2-952aae9787c7"
                }
            }
        },
        "NATEIP": {
            "Type": "AWS::EC2::EIP",
            "DependsOn": [
                "gw1"
            ],
            "Properties": {
                "Domain": "vpc"
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "e5fb2572-03fc-4f36-8788-251cfc411ac1"
                }
            }
        },
        "LinuxInternalENI": {
            "Type": "AWS::EC2::NetworkInterface",
            "Properties": {
                "SourceDestCheck": "true",
                "SubnetId": {
                    "Ref": "subnet2Az1"
                },
                "PrivateIpAddresses": [
                    {
                        "PrivateIpAddress": "10.1.10.7",
                        "Primary": "true"
                    }
                ],
                "GroupSet": [
                    {
                        "Ref": "sgF5SNOpsInternal"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Linux:Internal"
                    }
                ]
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "6b2761b5-9a83-4ea3-a6c6-ccf6b6bbcbca"
                }
            }
        },
 

        "WinExternalENI": {
            "Type": "AWS::EC2::NetworkInterface",
            "Properties": {
                "Description": "WIN:External",
                "SourceDestCheck": "true",
                "SubnetId": {
                    "Ref": "subnet1Az1"
                },
                "PrivateIpAddresses": [
                    {
                        "PrivateIpAddress": "10.1.20.249",
                        "Primary": "true"
                    }
                ],
                "GroupSet": [
                    {
                        "Ref": "sgF5SNOpsInternal"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "WIN:External"
                    }
                ]
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "a4174ee7-2ad7-499b-aa37-55465a0bcebe"
                }
            }
        },
        "WinInternalENI": {
            "Type": "AWS::EC2::NetworkInterface",
            "Properties": {
                "SourceDestCheck": "true",
                "SubnetId": {
                    "Ref": "subnet2Az1"
                },
                "PrivateIpAddresses": [
                    {
                        "PrivateIpAddress": "10.1.10.249",
                        "Primary": "true"
                    }
                ],
                "GroupSet": [
                    {
                        "Ref": "sgF5SNOpsInternal"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "WIN:Internal"
                    }
                ]
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "40161fc8-4f72-4b9b-9772-5ef31887ba18"
                }
            }
        },
        "F5SNOpsWindows": {
            "Type": "AWS::EC2::Instance",
            "Metadata": {
                "AWS::CloudFormation::Init": {
                    "config": {
                        "files": {
                            "C:\\Users\\Administrator\\Desktop\\postman-install.exe": {
                                "source": "https://dl.pstmn.io/download/latest/win64"
                            },
                            "C:\\Users\\Administrator\\Desktop\\putty.exe": {
                                "source": "https://the.earth.li/~sgtatham/putty/latest/w64/putty.exe"
                            }						
                        },
                        "commands": {
                            "a_wite_putty_ppk": {
                                "command": "echo \"PuTTY-User-Key-File-2: ssh-rsa\r\nEncryption: none\r\nComment: rsa-key-20190205\r\nPublic-Lines: 6\r\nAAAAB3NzaC1yc2EAAAABJQAAAQEAiDCWSled+al5xzIOPlknBS9y85rqcQR5Id3T\r\nFvaqu4SFKbJWhRI7P/Yd770godJLzk8JEz/4c1Rd1gvvjFfnEVrD/d22THkAd09p\r\nduantvnok4gkW6FCPn7ONydztBkOANzN9yk2lrNH/IwT0x6MBD7ajKCBd7fl4VPQ\r\nU5aOMnvw/4dOeZABdwSJ9TPDTMifjd3wwfK+xklg4MTuSdS7/zq/s+Xm2oarXHKn\r\n+F9NseIAf9mkPl8XAC5JN23am3BS0Lysq3rGzARMsnnPeeP8wE2E/7Il77Ueipmn\r\nuapOYav/d5D+/pA/HOqAaWYP+XU1rPeFhOnvGp19ryqUQWebOQ==\r\nPrivate-Lines: 14\r\nAAABAD6S3UTAeQQBwlSadT89t/t2qm/tO0ivBzkS5HJVqGP+ngw9LqvX8bWamCIK\r\nyc3PU0MdZQjYM+H2VKCds0B7aiqRfKUS1zfkkYLtIp5p+gf2SEPI7hxDLEY6QxJs\r\nEpEEl7s1BK/UqmDqlrJOMp9FYu0xoq9QqjAWOTAtbY4watjsI5+KoorhufHA9Bfz\r\n/5DP+htkrmPqVBpBRpH4GLXoFvPLjPn8jWTvWfG1DsrfJrqSXoTfFVKWWNi2Afbr\r\nEL5N1K/wEpyPlKjjJEZ8XnGnXK8zfb62uQSmX1GTmpSeoBK/sJjMA9/r4OSJA/eh\r\nl7UJVE1hXmpl3ajeI1Ojl165bQEAAACBAPm/0yO2Buokpq28z7gQU0zP+V/ESt/E\r\nPwU11oE3+E/mrb8oE7wcH+Wp6XCT4mBeMIJZTBRC9EdeNAutO644vr2F9+48iJuZ\r\nFdporS1LR9Mu+dZ2lQ6TbXOxFTTYFCaLOonFd/K8+NcdUEoLLX7iOHiBga6Z/Oj7\r\ndAFp9rDK85ELAAAAgQCLmSwUSfgoRDJfi8l1l93YCc0zjZrNm7iF1qVGWMUrFP8o\r\nEWEzPRKJd0pxjNN66s1HBVy77VDC930qNIzp04+3U1/hOFBB/5aq3ZDFkZlQyLZv\r\nrcuiyqFT3Kya6WoWvLIig6hPHf9vd50tu7q/YApQ+4PNMIfJVUYCNM/WPuB3SwAA\r\nAIEA0LLFRU9w5ELMtkSWErfynk+zeFCmYcnXN9wIJRph+lKg54QsGpG/C2JTIdYD\r\nnjGgFbnWdcEJL8zhjpYl7pOvf6rma1T8px/UjIHT1FtqobEHU3lrfKAE0J7OXRzP\r\n7qzmqeYGiO0U/z5BdrTtI76WdeuGO4w7lDhDUnDeVxQfcf4=\r\nPrivate-MAC: bc3b714dc8c2c7cc01c74bb357ddd14f868e470a\" > C:\\Users\\Administrator\\Desktop\\snops-lab-sshkey-putty.ppk"
                            },
                            "z_done": {
                                "command": "echo \"DONE\" > C:\\Users\\Administrator\\Desktop\\READY.txt"
                            }						
                        }
                    }
                },
                "AWS::CloudFormation::Designer": {
                    "id": "e74bcd48-3914-48ed-9f85-935733a287eb"
                }
            },
            "Properties": {
                "DisableApiTermination": "false",
                "InstanceInitiatedShutdownBehavior": "stop",
                "ImageId": {
                    "Ref": "WindowsImageId"
                },
                "InstanceType": "c1.xlarge",
                "KeyName": {
                    "Ref": "sshKey"
                },
                "Monitoring": "false",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "F5SNOpsWindows"
                    },
                    {
                        "Key": "RDPConnectivity",
						"Value": {
							"Fn::Join": [
								"",
								[
									"mstsc.exe /w:1680 /h:1050 /v:",
									{
										"Ref": "WindowsEIP"
									}
								]
							]
						}
                    },
                    {
                        "Key": "Password",
						"Value": {
							"Fn::Join": [
								"",
								[
									"AWS Menu: ACTIONS - GET WINDOWS PASSWORD",
									{
										"Ref": "WindowsEIP"
									}
								]
							]
						}
                    }					
                ],
                "NetworkInterfaces": [
                    {
                        "DeleteOnTermination": "true",
                        "Description": "Primary network interface",
                        "DeviceIndex": 0,
                        "SubnetId": {
                            "Ref": "managementSubnetAz1"
                        },
                        "PrivateIpAddresses": [
                            {
                                "PrivateIpAddress": "10.1.1.249",
                                "Primary": "true"
                            }
                        ],
                        "GroupSet": [
                            {
                                "Ref": "sgF5SNOpsInternal"
                            }
                        ]
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "<script>\n",
                                "cfn-init.exe -v -s ",
                                {
                                    "Ref": "AWS::StackId"
                                },
                                " -r F5SNOpsWindows",
                                " --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n",
                                "</script>"
                            ]
                        ]
                    }
                }
            }
        },
        "F5SNOpsLinux": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "DisableApiTermination": "false",
                "InstanceInitiatedShutdownBehavior": "stop",
                "ImageId": {
                    "Ref": "LinuxImageId"
                },
                "InstanceType": "t2.large",
                "KeyName": {
                    "Ref": "sshKey"
                },
                "Monitoring": "false",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "F5SNOpsLinux"
                    }
                ],
                "NetworkInterfaces": [
                    {
                        "DeleteOnTermination": "true",
                        "Description": "Primary network interface",
                        "DeviceIndex": 0,
                        "SubnetId": {
                            "Ref": "managementSubnetAz1"
                        },
                        "PrivateIpAddresses": [
                            {
                                "PrivateIpAddress": "10.1.1.7",
                                "Primary": "true"
                            }
                        ],
                        "GroupSet": [
                            {
                                "Ref": "sgF5SNOpsInternal"
                            }
                        ]
                    }
                ]
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "9611e2c3-9e3c-4dc5-802a-b18a959cad07"
                }
            }
        },
        "F5SNOpsDocker": {
            "Type": "AWS::EC2::Instance",
            "Metadata": {
                "AWS::CloudFormation::Init": {
                    "config": {
                        "commands": {
                            "a_allow_pw_auth": {
                                "command": "sudo sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config"
                            },
                            "b_restart_sshd": {
                                "command": "sudo service sshd restart"
                            },
                            "c_add_admin_user": {
                                "command": "sudo useradd -d /home/admin -G wheel -m -s /bin/bash admin"
                            },
                            "d_set_admin_pw": {
                                "command": " sudo sh -c 'echo \"admin:admin\" | chpasswd'"
                            },
                            "e_yum_update": {
                                "command": "sudo yum update -y"
                            },
                            "f_install_docker": {
                                "command": "sudo yum install -y docker"
                            },
                            "g_start_docker": {
                                "command": "sudo service docker start"
                            },
                            "h_set_perms": {
                                "command": "sudo usermod -a -G docker ec2-user"
                            },
                            "i_set_perms": {
                                "command": "sudo usermod -s /bin/bash -a -G docker admin"
                            },
                            "j_docker_hello": {
                                "command": "docker run hello-world"
                            },
                            "k_docker_pull_snops": {
                                "command": "docker pull f5devcentral/f5-super-netops-container:jenkins"
                            }
                        }
                    }
                },
                "AWS::CloudFormation::Designer": {
                    "id": "8d068f1c-6e86-4005-a5e7-f5fd1ebf1b94"
                }
            },
            "Properties": {
                "DisableApiTermination": "false",
                "InstanceInitiatedShutdownBehavior": "stop",
                "ImageId": {
                    "Ref": "LinuxImageId"
                },
                "InstanceType": "t2.large",
                "KeyName": {
                    "Ref": "sshKey"
                },
                "Monitoring": "false",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "F5SNOpsDocker"
                    }
                ],
                "NetworkInterfaces": [
                    {
                        "DeleteOnTermination": "true",
                        "Description": "Primary network interface",
                        "DeviceIndex": 0,
                        "SubnetId": {
                            "Ref": "managementSubnetAz1"
                        },
                        "PrivateIpAddresses": [
                            {
                                "PrivateIpAddress": "10.1.1.8",
                                "Primary": "true"
                            }
                        ],
                        "GroupSet": [
                            {
                                "Ref": "sgF5SNOpsInternal"
                            }
                        ]
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash -xe\n",
                                "# Install the files and packages from the metadata\n",
                                "/opt/aws/bin/cfn-init -v ",
                                "         --stack ",
                                {
                                    "Ref": "AWS::StackName"
                                },
                                "         --resource F5SNOpsDocker ",
                                "         --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n"
                            ]
                        ]
                    }
                }
            }
        },
        "sgF5SNOpsInbound": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Inbound RDP",
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "c328737e-d915-4544-bca7-447950880478"
                }
            }
        },
        "sgF5SNOpsInternal": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Allows  internal comms  in VPC",
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "554de484-93ad-4497-b3c4-2b4786757fae"
                }
            }
        },
        "dbsgdefault": {
            "Type": "AWS::RDS::DBSecurityGroup",
            "Properties": {
                "GroupDescription": "default"
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "610bd400-9f48-4acf-bdf5-95910a384e18"
                }
            }
        },
        "acl1": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "CidrBlock": "0.0.0.0/0",
                "Egress": "true",
                "Protocol": "-1",
                "RuleAction": "allow",
                "RuleNumber": "100",
                "NetworkAclId": {
                    "Ref": "aclc60e29a2"
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "fbae1785-6f27-435f-9fc5-e51449740473"
                }
            }
        },
        "acl2": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "CidrBlock": "0.0.0.0/0",
                "Protocol": "-1",
                "RuleAction": "allow",
                "RuleNumber": "100",
                "NetworkAclId": {
                    "Ref": "aclc60e29a2"
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "e0f87b07-a552-4d09-8331-e41ff2bdf3bc"
                }
            }
        },
        "subnetacl1": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "aclc60e29a2"
                },
                "SubnetId": {
                    "Ref": "managementSubnetAz1"
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "664d9cf3-1458-456b-96bc-2535681629e3"
                }
            }
        },
        "subnetacl2": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "aclc60e29a2"
                },
                "SubnetId": {
                    "Ref": "subnet1Az1"
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "04431737-6e9b-4f5e-a2bd-b6ab63685d17"
                }
            }
        },
        "subnetacl3": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "aclc60e29a2"
                },
                "SubnetId": {
                    "Ref": "subnet2Az1"
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "a9f029bb-18e5-4385-a1fc-0929027a987c"
                }
            }
        },
        "gw1": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "InternetGatewayId": {
                    "Ref": "IGW"
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "2ef182bf-0023-4e46-9a0f-b43e30ab8892"
                }
            }
        },
        "route1DefaultNATGW": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "DestinationCidrBlock": "0.0.0.0/0",
                "RouteTableId": {
                    "Ref": "RouteTableInternal"
                },
                "NatGatewayId": {
                    "Ref": "NATGW"
                }
            },
            "DependsOn": "gw1",
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "ee58d574-5215-406a-a330-619c69d68453"
                }
            }
        },
        "route2DefaultIGW": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "DestinationCidrBlock": "0.0.0.0/0",
                "RouteTableId": {
                    "Ref": "RouteTableExternal"
                },
                "GatewayId": {
                    "Ref": "IGW"
                }
            },
            "DependsOn": "gw1",
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "25613cd5-4b6b-4c86-b941-037552316da1"
                }
            }
        },
        "dchpassoc1": {
            "Type": "AWS::EC2::VPCDHCPOptionsAssociation",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "DhcpOptionsId": {
                    "Ref": "EC2DHCP1FOCR"
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "b3a8c73b-de2e-409b-ace7-2d27701c4aac"
                }
            }
        },
        "assoc1": {
            "Type": "AWS::EC2::EIPAssociation",
            "Properties": {
                "AllocationId": {
                    "Fn::GetAtt": [
                        "WindowsEIP",
                        "AllocationId"
                    ]
                },
                "NetworkInterfaceId": {
                    "Ref": "WindowsAccessNetworkInterface"
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "76924ecb-87a5-45b3-b05a-fbae9563ffe1"
                }
            }
        },
 


        "eniattachWinExternalENI": {
            "Type": "AWS::EC2::NetworkInterfaceAttachment",
            "Properties": {
                "DeviceIndex": "2",
                "NetworkInterfaceId": {
                    "Ref": "WinExternalENI"
                },
                "InstanceId": {
                    "Ref": "F5SNOpsWindows"
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "0190535d-c179-4ba5-8c01-868e07168cc6"
                }
            }
        },
        "eniattachWinInternalENI": {
            "Type": "AWS::EC2::NetworkInterfaceAttachment",
            "Properties": {
                "DeleteOnTermination": "true",
                "DeviceIndex": "1",
                "NetworkInterfaceId": {
                    "Ref": "WinInternalENI"
                },
                "InstanceId": {
                    "Ref": "F5SNOpsWindows"
                }
            },
            "DependsOn": [
                "assoc1"
            ],
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "6640276b-3fa5-4de5-9aed-79c32c10c84e"
                }
            }
        },
        "eniattachLinuxInternalENI": {
            "Type": "AWS::EC2::NetworkInterfaceAttachment",
            "Properties": {
                "DeleteOnTermination": "true",
                "DeviceIndex": "1",
                "NetworkInterfaceId": {
                    "Ref": "LinuxInternalENI"
                },
                "InstanceId": {
                    "Ref": "F5SNOpsLinux"
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "6ff2a6a0-6b25-410a-b638-b6863f9d07c0"
                }
            }
        },
        "eniattachWinAccessNetInt": {
            "Type": "AWS::EC2::NetworkInterfaceAttachment",
            "Properties": {
                "DeleteOnTermination": "true",
                "DeviceIndex": "3",
                "NetworkInterfaceId": {
                    "Ref": "WindowsAccessNetworkInterface"
                },
                "InstanceId": {
                    "Ref": "F5SNOpsWindows"
                }
            },
            "DependsOn": [
                "assoc1"
            ],
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "cd784f93-66ae-4d9f-a87e-547342663695"
                }
            }
        },
        "WindowsAccessNetworkInterface": {
            "Type": "AWS::EC2::NetworkInterface",
            "Properties": {
                "SubnetId": {
                    "Ref": "AccessSubnet"
                },
                "PrivateIpAddresses": [
                    {
                        "PrivateIpAddress": "10.1.100.249",
                        "Primary": "true"
                    }
                ],
                "GroupSet": [
                    {
                        "Ref": "sgF5SNOpsInbound"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Windows:Access"
                    }
                ]
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "d45dda00-ac25-4973-976a-dba0a86c71fb"
                }
            }
        },
        "ingress1": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "sgF5SNOpsInbound"
                },
                "IpProtocol": "tcp",
                "FromPort": "3389",
                "ToPort": "3389",
                "CidrIp": {
                    "Ref": "restrictedSrcAddress"
                }
            }
        },
        "ingress2": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "sgF5SNOpsInternal"
                },
                "IpProtocol": "tcp",
                "FromPort": "80",
                "ToPort": "80",
                "CidrIp": "10.1.0.0/16"
            }
        },
        "ingress3": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "sgF5SNOpsInternal"
                },
                "IpProtocol": "tcp",
                "FromPort": "22",
                "ToPort": "22",
                "CidrIp": "10.1.0.0/16"
            }
        },
        "ingress4": {
            "Type": "AWS::EC2::SecurityGroupIngress",
            "Properties": {
                "GroupId": {
                    "Ref": "sgF5SNOpsInternal"
                },
                "IpProtocol": "tcp",
                "FromPort": "443",
                "ToPort": "443",
                "CidrIp": "10.1.0.0/16"
            }
        },
        "egress1": {
            "Type": "AWS::EC2::SecurityGroupEgress",
            "Properties": {
                "GroupId": {
                    "Ref": "sgF5SNOpsInbound"
                },
                "IpProtocol": "-1",
                "CidrIp": "0.0.0.0/0"
            }
        },
        "egress2": {
            "Type": "AWS::EC2::SecurityGroupEgress",
            "Properties": {
                "GroupId": {
                    "Ref": "sgF5SNOpsInternal"
                },
                "IpProtocol": "-1",
                "CidrIp": "0.0.0.0/0"
            }
        },
		"AllowAllSecurityGroup": {
			"Properties": {
				"GroupDescription": "Enable All protocols",
				"SecurityGroupIngress": [
					{
						"IpProtocol": "icmp",
						"FromPort": "-1",
						"ToPort": "-1",
						"CidrIp": "0.0.0.0/0"
					},
					{
						"IpProtocol": "tcp",
						"FromPort": "1",
						"ToPort": "65535",
						"CidrIp": "0.0.0.0/0"
					},
					{
						"IpProtocol": "udp",
						"FromPort": "1",
						"ToPort": "65535",
						"CidrIp": "0.0.0.0/0"
					}
				],			
				"Tags": [
					{
						"Key": "Name",
						"Value": {
							"Fn::Join": [
								"",
								[
									{
										"Ref": "AWS::StackName"
									},
									":AllowAll_Security_Group"
								]
							]
						}
					}
				],
				"VpcId": {
					"Ref": "VPC"
				}
			},
			"Type": "AWS::EC2::SecurityGroup",
			"Metadata": {
				"AWS::CloudFormation::Designer": {
					"id": "a67e46f4-41e4-4122-80b3-bbf2024cc316"
				}
			}
		},		
        "AccessSubnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "CidrBlock": "10.1.100.0/24",
                "AvailabilityZone": {
                    "Fn::Select": [
                        "0",
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Access"
                    }
                ]
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "b6a7b9e3-3763-416a-821d-363ea7c81c0c"
                }
            }
        },
        "EC2DHCP1FOCR": {
            "Type": "AWS::EC2::DHCPOptions",
            "Properties": {
                "DomainName": "f5.local",
                "DomainNameServers": [
                    "4.2.2.2",
                    "8.8.8.8"
                ]
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "46fd6693-cb22-48d7-bfe1-57cffa1be770"
                }
            }
        },
	"Bigip1Instance": {
	   "Metadata": {
		"AWS::CloudFormation::Init": {
		 "config": {
		  "commands": {
		   "000-disable-1nicautoconfig": {
			"command": "/usr/bin/setdb provision.1nicautoconfig disable"
		   },
		   "010-install-libs": {
			"command": {
			 "Fn::Join": [
			  " ",
			  [
			   "mkdir -p /var/log/cloud/aws;",
			   "nohup /config/installCloudLibs.sh",
			   "&>> /var/log/cloud/aws/install.log < /dev/null &"
			  ]
			 ]
			}
		   },
		   "020-generate-password": {
			"command": {
			 "Fn::Join": [
			  "",
			  [
			   "nohup /config/waitThenRun.sh",
			   " f5-rest-node /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/runScript.js",
			   " --signal PASSWORD_CREATED",
			   " --file f5-rest-node",
			   " --cl-args '/config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/generatePassword --file /config/cloud/aws/.adminPassword --encrypt'",
			   " --log-level silly",
			   " -o /var/log/cloud/aws/generatePassword.log",
			   " &>> /var/log/cloud/aws/install.log < /dev/null",
			   " &"
			  ]
			 ]
			}
		   },
		   "030-create-admin-user": {
			"command": {
			 "Fn::Join": [
			  "",
			  [
			   "nohup /config/waitThenRun.sh",
			   " f5-rest-node /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/runScript.js",
			   " --wait-for PASSWORD_CREATED",
			   " --signal ADMIN_CREATED",
			   " --file /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/createUser.sh",
			   " --cl-args '--user admin",
			   " --password-file /config/cloud/aws/.adminPassword",
			   " --password-encrypted",
			   "'",
			   " --log-level silly",
			   " -o /var/log/cloud/aws/createUser.log",
			   " &>> /var/log/cloud/aws/install.log < /dev/null",
			   " &"
			  ]
			 ]
			}
		   },
		   "040-network-config": {
			"command": {
			 "Fn::Join": [
			  "",
			  [
			   "GATEWAY_MAC=`ifconfig eth1 | egrep HWaddr | awk '{print tolower($5)}'`; ",
			   "GATEWAY_CIDR_BLOCK=`curl -s -f --retry 20 http://169.254.169.254/latest/meta-data/network/interfaces/macs/${GATEWAY_MAC}/subnet-ipv4-cidr-block`; ",
			   "GATEWAY_NET=${GATEWAY_CIDR_BLOCK%/*}; ",
			   "GATEWAY_PREFIX=${GATEWAY_CIDR_BLOCK#*/}; ",
			   "GATEWAY=`echo ${GATEWAY_NET} | awk -F. '{ print $1\".\"$2\".\"$3\".\"$4+1 }'`; ",
			   "GATEWAY_MAC2=`ifconfig eth2 | egrep HWaddr | awk '{print tolower($5)}'`; ",
			   "GATEWAY_CIDR_BLOCK2=`curl -s -f --retry 20 http://169.254.169.254/latest/meta-data/network/interfaces/macs/${GATEWAY_MAC2}/subnet-ipv4-cidr-block`; ",
			   "GATEWAY_PREFIX2=${GATEWAY_CIDR_BLOCK2#*/}; ",
			   "nohup /config/waitThenRun.sh ",
			   "f5-rest-node /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/network.js ",
			   "--host localhost ",
			   "--user admin ",
			   "--password-url file:///config/cloud/aws/.adminPassword ",
			   "--password-encrypted ",
			   "-o /var/log/cloud/aws/network.log ",
			   "--log-level silly ",
			   "--wait-for ADMIN_CREATED ",
			   "--signal NETWORK_CONFIG_DONE ",
			   "--vlan name:external,nic:1.1 ",
			   "--default-gw ${GATEWAY} ",
			   "--self-ip name:external-self,address:",
			   {
				"Fn::GetAtt": [
				 "Bigip1subnet1Az1Interface",
				 "PrimaryPrivateIpAddress"
				]
			   },
			   "/${GATEWAY_PREFIX},vlan:external,allow:none ",
			   "--vlan name:internal,nic:1.2 ",
			   "--self-ip 'name:internal-self,address:",
			   {
				"Fn::GetAtt": [
				 "Bigip1InternalInterface",
				 "PrimaryPrivateIpAddress"
				]
			   },
			   "/'${GATEWAY_PREFIX2}',vlan:internal,allow:tcp:4353 udp:1026' ",
			   "&>> /var/log/cloud/aws/install.log < /dev/null &"
			  ]
			 ]
			}
		   },
		   "050-onboard-BIG-IP": {
			"command": {
			 "Fn::If": [
			  "optin",
			  {
			   "Fn::Join": [
				" ",
				[
				 "REGION=\"",
				 {
				  "Ref": "AWS::Region"
				 },
				 "\";",
				 "DEPLOYMENTID=`echo \"",
				 {
				  "Ref": "AWS::StackId"
				 },
				 "\"|sha512sum|cut -d \" \" -f 1`;",
				 "CUSTOMERID=`echo \"",
				 {
				  "Ref": "AWS::AccountId"
				 },
				 "\"|sha512sum|cut -d \" \" -f 1`;",
				 "NAME_SERVER=`/config/cloud/aws/getNameServer.sh eth1`;",
				 "nohup /config/waitThenRun.sh",
				 "f5-rest-node /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/onboard.js",
				 "--install-ilx-package file:///config/cloud/f5-appsvcs-3.5.1-5.noarch.rpm",
				 "--wait-for NETWORK_CONFIG_DONE",
				 "--signal ONBOARD_DONE",
				 "-o /var/log/cloud/aws/onboard.log",
				 "--log-level silly",
				 "--no-reboot",
				 "--host localhost",
				 "--user admin",
				 "--password-url file:///config/cloud/aws/.adminPassword",
				 "--password-encrypted",
				 "--hostname `curl -s -f --retry 20 http://169.254.169.254/latest/meta-data/hostname`",
				 "--ntp ",
				 {
				  "Ref": "ntpServer"
				 },
				 "--tz ",
				 {
				  "Ref": "timezone"
				 },
				 "--dns ${NAME_SERVER}",
				 "--module ltm:nominal",
				 "--metrics \"cloudName:aws,region:${REGION},bigipVersion:13.1.1-0.0.4,customerId:${CUSTOMERID},deploymentId:${DEPLOYMENTID},templateName:f5-prod-stack-same-az-cluster-payg-3nic-bigip.template,templateVersion:4.1.1,licenseType:hourly\"",
				 "--ping",
				 "&>> /var/log/cloud/aws/install.log < /dev/null &"
				]
			   ]
			  },
			  {
			   "Fn::Join": [
				" ",
				[
				 "NAME_SERVER=`/config/cloud/aws/getNameServer.sh eth1`;",
				 "nohup /config/waitThenRun.sh",
				 "f5-rest-node /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/onboard.js",
				 "--install-ilx-package file:///config/cloud/f5-appsvcs-3.5.1-5.noarch.rpm",
				 "--wait-for NETWORK_CONFIG_DONE",
				 "--signal ONBOARD_DONE",
				 "-o /var/log/cloud/aws/onboard.log",
				 "--log-level silly",
				 "--no-reboot",
				 "--host localhost",
				 "--user admin",
				 "--password-url file:///config/cloud/aws/.adminPassword",
				 "--password-encrypted",
				 "--hostname `curl -s -f --retry 20 http://169.254.169.254/latest/meta-data/hostname`",
				 "--ntp ",
				 {
				  "Ref": "ntpServer"
				 },
				 "--tz ",
				 {
				  "Ref": "timezone"
				 },
				 "--dns ${NAME_SERVER}",
				 "--module ltm:nominal",
				 "--ping",
				 "&>> /var/log/cloud/aws/install.log < /dev/null &"
				]
			   ]
			  }
			 ]
			}
		   },
		   "060-custom-config": {
			"command": {
			 "Fn::Join": [
			  " ",
			  [
			   "nohup /config/waitThenRun.sh",
			   "f5-rest-node /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/runScript.js",
			   "--file /config/cloud/aws/custom-config.sh",
			   "--cwd /config/cloud/aws",
			   "-o /var/log/cloud/aws/custom-config.log",
			   "--log-level silly",
			   "--wait-for ONBOARD_DONE",
			   "--signal CUSTOM_CONFIG_DONE",
			   "&>> /var/log/cloud/aws/install.log < /dev/null &"
			  ]
			 ]
			}
		   },
		   "065-cluster": {
			"command": {
			 "Fn::Join": [
			  " ",
			  [
			   "HOSTNAME=`curl -s -f --retry 20 http://169.254.169.254/latest/meta-data/hostname`;",
			   "nohup /config/waitThenRun.sh",
			   "f5-rest-node /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/cluster.js",
			   "--wait-for CUSTOM_CONFIG_DONE",
			   "--signal CLUSTER_DONE",
			   "-o /var/log/cloud/aws/cluster.log",
			   "--log-level silly",
			   "--host localhost",
			   "--user admin",
			   "--password-url file:///config/cloud/aws/.adminPassword",
			   "--password-encrypted",
			   "--cloud aws",
			   "--provider-options 's3Bucket:",
			   {
				"Ref": "S3Bucket"
			   },
			   "'",
			   "--master",
			   "--config-sync-ip",
			   {
				"Fn::GetAtt": [
				 "Bigip1InternalInterface",
				 "PrimaryPrivateIpAddress"
				]
			   },
			   "--create-group",
			   "--device-group across_az_failover_group",
			   "--sync-type sync-failover",
			   "--network-failover",
			   "--device ${HOSTNAME}",
			   "--auto-sync",
			   "&>> /var/log/cloud/aws/install.log < /dev/null &"
			  ]
			 ]
			}
		   },
		   "070-rm-password": {
			"command": {
			 "Fn::Join": [
			  " ",
			  [
			   "nohup /config/waitThenRun.sh",
			   "f5-rest-node /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/runScript.js",
			   "--file /config/cloud/aws/rm-password.sh",
			   "-o /var/log/cloud/aws/rm-password.log",
			   "--log-level silly",
			   "--wait-for CLUSTER_DONE",
			   "--signal PASSWORD_REMOVED",
			   "&>> /var/log/cloud/aws/install.log < /dev/null &"
			  ]
			 ]
			}
		   }
		  },
		  "files": {
		   "/config/cloud/aws/custom-config.sh": {
			"content": {
			 "Fn::Join": [
			  "",
			  [
			   "#!/bin/bash\n",
			   "EXTIP='",
			   {
				"Fn::GetAtt": [
				 "Bigip1subnet1Az1Interface",
				 "PrimaryPrivateIpAddress"
				]
			   },
			   "'\n",
			   "EXTPRIVIP='",
			   {
				"Fn::Select": [
				 "0",
				 {
				  "Fn::GetAtt": [
				   "Bigip1subnet1Az1Interface",
				   "SecondaryPrivateIpAddresses"
				  ]
				 }
				]
			   },
			   "'\n",
			   "HOSTNAME=`curl -s -f --retry 20 http://169.254.169.254/latest/meta-data/hostname`\n",
			   "INTIP='",
			   {
				"Fn::GetAtt": [
				 "Bigip1InternalInterface",
				 "PrimaryPrivateIpAddress"
				]
			   },
			   "'\n",
			   "PEER_EXTPRIVIP='",
			   {
				"Fn::Select": [
				 "0",
				 {
				  "Fn::GetAtt": [
				   "Bigip2subnet1Az1Interface",
				   "SecondaryPrivateIpAddresses"
				  ]
				 }
				]
			   },
			   "'\n",
			   "PROGNAME=$(basename $0)\n",
			   "function error_exit {\n",
			   "echo \"${PROGNAME}: ${1:-\\\"Unknown Error\\\"}\" 1>&2\n",
			   "exit 1\n",
			   "}\n",
			   "declare -a tmsh=()\n",
			   "echo 'starting custom-config.sh'\n",
			   "tmsh+=(\n",
			   "\"tmsh modify sys db dhclient.mgmt { value disable }\"\n",
			   "\"tmsh modify cm device ${HOSTNAME} unicast-address { { effective-ip ${INTIP} effective-port 1026 ip ${INTIP} } }\"\n",
			   "\"tmsh load sys application template /config/cloud/aws/f5.service_discovery.tmpl\"\n",
			   "\"tmsh load sys application template /config/cloud/aws/f5.cloud_logger.v1.0.0.tmpl\"\n",
			   "\"tmsh save /sys config\")\n",
			   "for CMD in \"${tmsh[@]}\"\n",
			   "do\n",
			   "  \"/config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/waitForMcp.sh\"\n",
			   "    if $CMD;then\n",
			   "        echo \"command $CMD successfully executed.\"\n",
			   "    else\n",
			   "        error_exit \"$LINENO: An error has occurred while executing $CMD. Aborting!\"\n",
			   "    fi\n",
			   "done\n",
			   "date\n",
			   "### START CUSTOM CONFIGURTION\n",
			   "### END CUSTOM CONFIGURATION"
			  ]
			 ]
			},
			"group": "root",
			"mode": "000755",
			"owner": "root"
		   },
		   "/config/cloud/aws/f5.cloud_logger.v1.0.0.tmpl": {
			"group": "root",
			"mode": "000755",
			"owner": "root",
			"source": "https://raw.githubusercontent.com/F5Networks/f5-cloud-iapps/v2.2.3/f5-cloud-logger/f5.cloud_logger.v1.0.0.tmpl"
		   },
		   "/config/cloud/aws/f5.service_discovery.tmpl": {
			"group": "root",
			"mode": "000755",
			"owner": "root",
			"source": "https://raw.githubusercontent.com/F5Networks/f5-cloud-iapps/v2.2.3/f5-service-discovery/f5.service_discovery.tmpl"
		   },
		   "/config/cloud/aws/getNameServer.sh": {
			"content": {
			 "Fn::Join": [
			  "\n",
			  [
			   "INTERFACE=$1",
			   "INTERFACE_MAC=`ifconfig ${INTERFACE} | egrep HWaddr | awk '{print tolower($5)}'`",
			   "VPC_CIDR_BLOCK=`curl -s -f --retry 20 http://169.254.169.254/latest/meta-data/network/interfaces/macs/${INTERFACE_MAC}/vpc-ipv4-cidr-block`",
			   "VPC_NET=${VPC_CIDR_BLOCK%/*}",
			   "NAME_SERVER=`echo ${VPC_NET} | awk -F. '{ printf \"%d.%d.%d.%d\", $1, $2, $3, $4+2 }'`",
			   "echo $NAME_SERVER"
			  ]
			 ]
			},
			"group": "root",
			"mode": "000755",
			"owner": "root"
		   },
		   "/config/cloud/aws/rm-password.sh": {
			"content": {
			 "Fn::Join": [
			  "",
			  [
			   "#!/bin/bash\n",
			   "PROGNAME=$(basename $0)\n",
			   "function error_exit {\n",
			   "echo \"${PROGNAME}: ${1:-\"Unknown Error\"}\" 1>&2\n",
			   "exit 1\n",
			   "}\n",
			   "date\n",
			   "echo 'starting rm-password.sh'\n",
			   "declare -a tmsh=()\n",
			   "tmsh+=(\"rm /config/cloud/aws/.adminPassword\")\n",
			   "for CMD in \"${tmsh[@]}\"\n",
			   "do\n",
			   "  if $CMD;then\n",
			   "      echo \"command $CMD successfully executed.\"\n",
			   "  else\n",
			   "      error_exit \"$LINENO: An error has occurred while executing $CMD. Aborting!\"\n",
			   "  fi\n",
			   "done\n",
			   "date\n"
			  ]
			 ]
			},
			"group": "root",
			"mode": "000755",
			"owner": "root"
		   },
		   "/config/cloud/f5-appsvcs-3.5.1-5.noarch.rpm": {
			"group": "root",
			"mode": "000755",
			"owner": "root",
			"source": "https://raw.githubusercontent.com/F5Networks/f5-appsvcs-extension/v3.6.0/dist/lts/f5-appsvcs-3.5.1-5.noarch.rpm"
		   },
		   "/config/cloud/f5-cloud-libs-aws.tar.gz": {
			"group": "root",
			"mode": "000755",
			"owner": "root",
			"source": "https://raw.githubusercontent.com/F5Networks/f5-cloud-libs-aws/v2.4.0/dist/f5-cloud-libs-aws.tar.gz"
		   },
		   "/config/cloud/f5-cloud-libs.tar.gz": {
			"group": "root",
			"mode": "000755",
			"owner": "root",
			"source": "https://raw.githubusercontent.com/F5Networks/f5-cloud-libs/v4.6.0/dist/f5-cloud-libs.tar.gz"
		   },
		   "/config/installCloudLibs.sh": {
			"content": {
			 "Fn::Join": [
			  "\n",
			  [
			   "#!/bin/bash",
			   "echo about to execute",
			   "checks=0",
			   "while [ $checks -lt 120 ]; do echo checking mcpd",
			   "    tmsh -a show sys mcp-state field-fmt | grep -q running",
			   "    if [ $? == 0 ]; then",
			   "        echo mcpd ready",
			   "        break",
			   "    fi",
			   "    echo mcpd not ready yet",
			   "    let checks=checks+1",
			   "    sleep 10",
			   "done",
			   "echo loading verifyHash script",
			   "if ! tmsh load sys config merge file /config/verifyHash; then",
			   "    echo cannot validate signature of /config/verifyHash",
			   "    exit",
			   "fi",
			   "echo loaded verifyHash",
			   "declare -a filesToVerify=(\"/config/cloud/f5-cloud-libs.tar.gz\" \"/config/cloud/f5-cloud-libs-aws.tar.gz\" \"/config/cloud/f5-appsvcs-3.5.1-5.noarch.rpm\"  \"/config/cloud/aws/f5.service_discovery.tmpl\" \"/config/cloud/aws/f5.cloud_logger.v1.0.0.tmpl\")",
			   "for fileToVerify in \"${filesToVerify[@]}\"",
			   "do",
			   "    echo verifying \"$fileToVerify\"",
			   "    if ! tmsh run cli script verifyHash \"$fileToVerify\"; then",
			   "        echo \"$fileToVerify\" is not valid",
			   "        exit 1",
			   "    fi",
			   "    echo verified \"$fileToVerify\"",
			   "done",
			   "mkdir -p /config/cloud/aws/node_modules/@f5devcentral",
			   "echo expanding f5-cloud-libs.tar.gz",
			   "tar xvfz /config/cloud/f5-cloud-libs.tar.gz -C /config/cloud/aws/node_modules/@f5devcentral",
			   "echo installing dependencies",
			   "tar xvfz /config/cloud/f5-cloud-libs-aws.tar.gz -C /config/cloud/aws/node_modules/@f5devcentral",
			   "echo cloud libs install complete",
			   "touch /config/cloud/cloudLibsReady"
			  ]
			 ]
			},
			"group": "root",
			"mode": "000755",
			"owner": "root"
		   },
		   "/config/verifyHash": {
			"content": "cli script /Common/verifyHash {\nproc script::run {} {\n        if {[catch {\n            set hashes(f5-cloud-libs.tar.gz) 535059811324dbda9783df2c4f7ac8405acf6f198efd5696bc0d90f4f8f645b77c04efd42c3dc94261f0b92d76cbae87613412531968a5e646baf4177807b953\n            set hashes(f5-cloud-libs-aws.tar.gz) 076c969cbfff12efacce0879820262b7787c98645f1105667cc4927d4acfe2466ed64c777b6d35957f6df7ae266937dde42fef4c8b1f870020a366f7f910ffb5\n            set hashes(f5-cloud-libs-azure.tar.gz) eea34eb9bf1fc86702cc8d3adcd0cd4cd3e8ede0bad5d85ce55b7248aeb5726583b0314bd1ac9383dbfbf97c79d08d27a473539844de6972c9f6f5fea1a7b9aa\n            set hashes(f5-cloud-libs-gce.tar.gz) 605c13c0725dcf6ee96d24349aee68be59640c58fef16d42d69fe1b01fb2e59df14f2cd41f0718d21061b8fb52cdce57fcf6541ebc8610e54e0f7fe8e46d94cb\n            set hashes(f5-cloud-libs-openstack.tar.gz) 5c83fe6a93a6fceb5a2e8437b5ed8cc9faf4c1621bfc9e6a0779f6c2137b45eab8ae0e7ed745c8cf821b9371245ca29749ca0b7e5663949d77496b8728f4b0f9\n            set hashes(asm-policy-linux.tar.gz) 63b5c2a51ca09c43bd89af3773bbab87c71a6e7f6ad9410b229b4e0a1c483d46f1a9fff39d9944041b02ee9260724027414de592e99f4c2475415323e18a72e0\n            set hashes(f5.http.v1.2.0rc4.tmpl) 47c19a83ebfc7bd1e9e9c35f3424945ef8694aa437eedd17b6a387788d4db1396fefe445199b497064d76967b0d50238154190ca0bd73941298fc257df4dc034\n            set hashes(f5.http.v1.2.0rc6.tmpl) 811b14bffaab5ed0365f0106bb5ce5e4ec22385655ea3ac04de2a39bd9944f51e3714619dae7ca43662c956b5212228858f0592672a2579d4a87769186e2cbfe\n            set hashes(f5.http.v1.2.0rc7.tmpl) 21f413342e9a7a281a0f0e1301e745aa86af21a697d2e6fdc21dd279734936631e92f34bf1c2d2504c201f56ccd75c5c13baa2fe7653213689ec3c9e27dff77d\n            set hashes(f5.aws_advanced_ha.v1.3.0rc1.tmpl) 9e55149c010c1d395abdae3c3d2cb83ec13d31ed39424695e88680cf3ed5a013d626b326711d3d40ef2df46b72d414b4cb8e4f445ea0738dcbd25c4c843ac39d\n            set hashes(f5.aws_advanced_ha.v1.4.0rc1.tmpl) de068455257412a949f1eadccaee8506347e04fd69bfb645001b76f200127668e4a06be2bbb94e10fefc215cfc3665b07945e6d733cbe1a4fa1b88e881590396\n            set hashes(f5.aws_advanced_ha.v1.4.0rc2.tmpl) 6ab0bffc426df7d31913f9a474b1a07860435e366b07d77b32064acfb2952c1f207beaed77013a15e44d80d74f3253e7cf9fbbe12a90ec7128de6facd097d68f\n            set hashes(f5.aws_advanced_ha.v1.4.0rc3.tmpl) 2f2339b4bc3a23c9cfd42aae2a6de39ba0658366f25985de2ea53410a745f0f18eedc491b20f4a8dba8db48970096e2efdca7b8efffa1a83a78e5aadf218b134\n            set hashes(asm-policy.tar.gz) 2d39ec60d006d05d8a1567a1d8aae722419e8b062ad77d6d9a31652971e5e67bc4043d81671ba2a8b12dd229ea46d205144f75374ed4cae58cefa8f9ab6533e6\n            set hashes(deploy_waf.sh) 1a3a3c6274ab08a7dc2cb73aedc8d2b2a23cd9e0eb06a2e1534b3632f250f1d897056f219d5b35d3eed1207026e89989f754840fd92969c515ae4d829214fb74\n            set hashes(f5.policy_creator.tmpl) 06539e08d115efafe55aa507ecb4e443e83bdb1f5825a9514954ef6ca56d240ed00c7b5d67bd8f67b815ee9dd46451984701d058c89dae2434c89715d375a620\n            set hashes(f5.service_discovery.tmpl) 0c43a28d58ff8339891ef324763675c29275170f8984d39298a53f570385eef82bef6d5a273adebb5310fc529faffc9b225358ec8f65100115246915eff706fe\n            set hashes(f5.cloud_logger.v1.0.0.tmpl) 64a0ed3b5e32a037ba4e71d460385fe8b5e1aecc27dc0e8514b511863952e419a89f4a2a43326abb543bba9bc34376afa114ceda950d2c3bd08dab735ff5ad20\n            set hashes(f5-appsvcs-3.5.1-5.noarch.rpm) ba71c6e1c52d0c7077cdb25a58709b8fb7c37b34418a8338bbf67668339676d208c1a4fef4e5470c152aac84020b4ccb8074ce387de24be339711256c0fa78c8\n\n            set file_path [lindex $tmsh::argv 1]\n            set file_name [file tail $file_path]\n\n            if {![info exists hashes($file_name)]} {\n                tmsh::log err \"No hash found for $file_name\"\n                exit 1\n            }\n\n            set expected_hash $hashes($file_name)\n            set computed_hash [lindex [exec /usr/bin/openssl dgst -r -sha512 $file_path] 0]\n            if { $expected_hash eq $computed_hash } {\n                exit 0\n            }\n            tmsh::log err \"Hash does not match for $file_path\"\n            exit 1\n        }]} {\n            tmsh::log err {Unexpected error in verifyHash}\n            exit 1\n        }\n    }\n    script-signature hCr5O6FtvOkjRk8Vn1499YU57spPEMbLXCfkgLVsVcmBCXnHbRw6zTIZOJlGkwk7CyCTpcuVuTR1SiGsQKnclgcQFkEDP5rw98jyIwvKpfYXiLxPI2SPsyadom41FDPXy9+b4aOAJGRPcp5/HhRP7+ky7x6jI5SEF4ZFExN6BwWXn61D+MwYe2Ajhes/6wuZv+b9i9teckZLkyB54OAbEyEug3S66YK2Jg916Y5JLNhDn7JNoOPoyFvYlyuDOutcjFHiwjdSFEgcOx/dka/5aHtjKEiMWuCsuaZnhGKSHc/ZCTH8oht1qUi28Dz5W2Gq6hRE9Zt5S4HmS3JKu2wlfg==\n    signing-key /Common/f5-irule\n}",
			"group": "root",
			"mode": "000755",
			"owner": "root"
		   },
		   "/config/waitThenRun.sh": {
			"content": {
			 "Fn::Join": [
			  "\n",
			  [
			   "#!/bin/bash",
			   "while true; do echo \"waiting for cloud libs install to complete\"",
			   "    if [ -f /config/cloud/cloudLibsReady ]; then",
			   "        break",
			   "    else",
			   "        sleep 10",
			   "    fi",
			   "done",
			   "\"$@\""
			  ]
			 ]
			},
			"group": "root",
			"mode": "000755",
			"owner": "root"
		   }
		  }
		 }
		}
	   },
	   "Properties": {
		"BlockDeviceMappings": [
		 {
		  "DeviceName": "/dev/xvda",
		  "Ebs": {
		   "DeleteOnTermination": "true",
		   "VolumeType": "gp2"
		  }
		 },
		 {
		  "DeviceName": "/dev/xvdb",
		  "NoDevice": {}
		 }
		],
		"IamInstanceProfile": {
		 "Ref": "bigipServiceDiscoveryProfile"
		},
		"ImageId": { "Ref": "BigIpImageId" },
		"InstanceType": "m4.4xlarge",
		"KeyName": {
		 "Ref": "sshKey"
		},
		"NetworkInterfaces": [
		 {
		  "Description": "Management Interface",
		  "DeviceIndex": "0",
		  "NetworkInterfaceId": {
		   "Ref": "Bigip1ManagementInterface"
		  }
		 },
		 {
		  "Description": "Public or External Interface",
		  "DeviceIndex": "1",
		  "NetworkInterfaceId": {
		   "Ref": "Bigip1subnet1Az1Interface"
		  }
		 },
		 {
		  "Description": "Private or Internal Interface",
		  "DeviceIndex": "2",
		  "NetworkInterfaceId": {
		   "Ref": "Bigip1InternalInterface"
		  }
		 }
		],
		"Tags": [
		 {
		  "Key": "Application",
		  "Value": {
		   "Ref": "application"
		  }
		 },
		 {
		  "Key": "Costcenter",
		  "Value": {
		   "Ref": "costcenter"
		  }
		 },
		 {
		  "Key": "Environment",
		  "Value": {
		   "Ref": "environment"
		  }
		 },
		 {
		  "Key": "Group",
		  "Value": {
		   "Ref": "group"
		  }
		 },
		 {
		  "Key": "Name",
		  "Value": {
		   "Fn::Join": [
			"",
			[
			 "SNOPS:Big-IP1: ",
			 {
			  "Ref": "AWS::StackName"
			 }
			]
		   ]
		  }
		 },
		 {
		  "Key": "Owner",
		  "Value": {
		   "Ref": "owner"
		  }
		 }
		],
		"UserData": {
		 "Fn::Base64": {
		  "Fn::Join": [
		   "",
		   [
			"#!/bin/bash\n",
			"/opt/aws/apitools/cfn-init-1.4-0.amzn1/bin/cfn-init -v -s ",
			{
			 "Ref": "AWS::StackId"
			},
			" -r ",
			"Bigip1Instance",
			" --region ",
			{
			 "Ref": "AWS::Region"
			},
			"\n"
		   ]
		  ]
		 }
		}
	   },
	   "Type": "AWS::EC2::Instance"
	  },
	"Bigip1ManagementInterface": {
		"Properties": {
			"Description": "Management Interface for the BIG-IP",
			"GroupSet": [
				{ "Ref": "bigipManagementSecurityGroup" }
			],
			"SubnetId": { "Ref": "managementSubnetAz1" },
			"SourceDestCheck" : "true",
			"PrivateIpAddresses": [
				{ "PrivateIpAddress": "10.1.1.9", "Primary": "true" }
			],
			"Tags": [
				{ "Key": "Network", "Value": "F5Labs:BigIp:ManagementNIC" },			
				{ "Key": "Name", "Value": "F5Labs:BigIp:ManagementNIC" }
			]
		},
		"Type": "AWS::EC2::NetworkInterface",
		"Metadata": {
			"AWS::CloudFormation::Designer": {
				"id": "851ab336-8f09-4d5a-b8bf-bec0139c3977"
			}
		}
	},
		  
	  "Bigip1InternalInterface": {
		"Properties": {
			"Description": "Internal Interface for the BIG-IP",
			"GroupSet": [ {	"Ref": "bigipInternalSecurityGroup"	}
            ],
			"SubnetId": { "Ref": "subnet2Az1" },
			"SourceDestCheck" : "false",
			"PrivateIpAddresses": [
				{ "PrivateIpAddress": "10.1.10.8", "Primary": "true" },
				{ "PrivateIpAddress": "10.1.10.9", "Primary": "false" }	
			],
			"Tags": [
				{ "Key": "Network", "Value": "F5Labs:BigIp:InternalNIC"	},			
				{ "Key": "Name", "Value": "F5Labs:BigIp:InternalNIC" }
			]
		},
		"Type": "AWS::EC2::NetworkInterface",
		"Metadata": {
			"AWS::CloudFormation::Designer": {
				"id": "f6bebf4d-2109-45e5-8e38-0b82e7e68c14"
			}
		}
	},
	
	"Bigip1subnet1Az1Interface": {
		"Properties": {
				"Description": "External Interface for the BIG-IP1",
				"GroupSet": [
					{ "Ref": "AllowAllSecurityGroup" }
				],
				"SubnetId": { "Ref": "subnet1Az1" },
				"SourceDestCheck" : "false",
				"PrivateIpAddresses" : [ 
					   { "PrivateIpAddress": "10.1.20.8", "Primary": "true" },
					   { "PrivateIpAddress": "10.1.20.9", "Primary": "false" }					   
					 ],		   
				"Tags": [
						{ "Key": "Network",	"Value": "F5Labs:BigIp:ExternalNIC"	},			
						{ "Key": "Name", "Value": "F5Labs:BigIp:ExternalNIC" }
				]
			},
		"Type": "AWS::EC2::NetworkInterface",
		"Metadata": {
			"AWS::CloudFormation::Designer": {
				"id": "3cbfa9c8-a6da-40fb-ba48-5a2c1aab08ae"
			}
		}
	},

	  
		  "Bigip2Instance": {
		   "DependsOn": "Bigip1Instance",
		   "Metadata": {
			"AWS::CloudFormation::Init": {
			 "config": {
			  "commands": {
			   "000-disable-1nicautoconfig": {
				"command": "/usr/bin/setdb provision.1nicautoconfig disable"
			   },
			   "010-install-libs": {
				"command": {
				 "Fn::Join": [
				  " ",
				  [
				   "mkdir -p /var/log/cloud/aws;",
				   "nohup /config/installCloudLibs.sh",
				   "&>> /var/log/cloud/aws/install.log < /dev/null &"
				  ]
				 ]
				}
			   },
			   "020-generate-password": {
				"command": {
				 "Fn::Join": [
				  "",
				  [
				   "nohup /config/waitThenRun.sh",
				   " f5-rest-node /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/runScript.js",
				   " --signal PASSWORD_CREATED",
				   " --file f5-rest-node",
				   " --cl-args '/config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/generatePassword --file /config/cloud/aws/.adminPassword --encrypt'",
				   " --log-level silly",
				   " -o /var/log/cloud/aws/generatePassword.log",
				   " &>> /var/log/cloud/aws/install.log < /dev/null",
				   " &"
				  ]
				 ]
				}
			   },
			   "030-create-admin-user": {
				"command": {
				 "Fn::Join": [
				  "",
				  [
				   "nohup /config/waitThenRun.sh",
				   " f5-rest-node /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/runScript.js",
				   " --wait-for PASSWORD_CREATED",
				   " --signal ADMIN_CREATED",
				   " --file /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/createUser.sh",
				   " --cl-args '--user admin",
				   " --password-file /config/cloud/aws/.adminPassword",
				   " --password-encrypted",
				   "'",
				   " --log-level silly",
				   " -o /var/log/cloud/aws/createUser.log",
				   " &>> /var/log/cloud/aws/install.log < /dev/null",
				   " &"
				  ]
				 ]
				}
			   },
			   "040-network-config": {
				"command": {
				 "Fn::Join": [
				  "",
				  [
				   "GATEWAY_MAC=`ifconfig eth1 | egrep HWaddr | awk '{print tolower($5)}'`; ",
				   "GATEWAY_CIDR_BLOCK=`curl -s -f --retry 20 http://169.254.169.254/latest/meta-data/network/interfaces/macs/${GATEWAY_MAC}/subnet-ipv4-cidr-block`; ",
				   "GATEWAY_NET=${GATEWAY_CIDR_BLOCK%/*}; ",
				   "GATEWAY_PREFIX=${GATEWAY_CIDR_BLOCK#*/}; ",
				   "GATEWAY=`echo ${GATEWAY_NET} | awk -F. '{ print $1\".\"$2\".\"$3\".\"$4+1 }'`; ",
				   "GATEWAY_MAC2=`ifconfig eth2 | egrep HWaddr | awk '{print tolower($5)}'`; ",
				   "GATEWAY_CIDR_BLOCK2=`curl -s -f --retry 20 http://169.254.169.254/latest/meta-data/network/interfaces/macs/${GATEWAY_MAC2}/subnet-ipv4-cidr-block`; ",
				   "GATEWAY_PREFIX2=${GATEWAY_CIDR_BLOCK2#*/}; ",
				   "nohup /config/waitThenRun.sh ",
				   "f5-rest-node /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/network.js ",
				   "--host localhost ",
				   "--user admin ",
				   "--password-url file:///config/cloud/aws/.adminPassword ",
				   "--password-encrypted ",
				   "-o /var/log/cloud/aws/network.log ",
				   "--log-level silly ",
				   "--wait-for ADMIN_CREATED ",
				   "--signal NETWORK_CONFIG_DONE ",
				   "--vlan name:external,nic:1.1 ",
				   "--default-gw ${GATEWAY} ",
				   "--self-ip name:external-self,address:",
				   {
					"Fn::GetAtt": [
					 "Bigip2subnet1Az1Interface",
					 "PrimaryPrivateIpAddress"
					]
				   },
				   "/${GATEWAY_PREFIX},vlan:external,allow:none ",
				   "--vlan name:internal,nic:1.2 ",
				   "--self-ip 'name:internal-self,address:",
				   {
					"Fn::GetAtt": [
					 "Bigip2InternalInterface",
					 "PrimaryPrivateIpAddress"
					]
				   },
				   "/'${GATEWAY_PREFIX2}',vlan:internal,allow:tcp:4353 udp:1026' ",
				   "&>> /var/log/cloud/aws/install.log < /dev/null &"
				  ]
				 ]
				}
			   },
			   "050-onboard-BIG-IP": {
				"command": {
				 "Fn::If": [
				  "optin",
				  {
				   "Fn::Join": [
					" ",
					[
					 "REGION=\"",
					 {
					  "Ref": "AWS::Region"
					 },
					 "\";",
					 "DEPLOYMENTID=`echo \"",
					 {
					  "Ref": "AWS::StackId"
					 },
					 "\"|sha512sum|cut -d \" \" -f 1`;",
					 "CUSTOMERID=`echo \"",
					 {
					  "Ref": "AWS::AccountId"
					 },
					 "\"|sha512sum|cut -d \" \" -f 1`;",
					 "NAME_SERVER=`/config/cloud/aws/getNameServer.sh eth1`;",
					 "nohup /config/waitThenRun.sh",
					 "f5-rest-node /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/onboard.js",
					 "--install-ilx-package file:///config/cloud/f5-appsvcs-3.5.1-5.noarch.rpm",
					 "--wait-for NETWORK_CONFIG_DONE",
					 "--signal ONBOARD_DONE",
					 "-o /var/log/cloud/aws/onboard.log",
					 "--log-level silly",
					 "--no-reboot",
					 "--host localhost",
					 "--user admin",
					 "--password-url file:///config/cloud/aws/.adminPassword",
					 "--password-encrypted",
					 "--hostname `curl -s -f --retry 20 http://169.254.169.254/latest/meta-data/hostname`",
					 "--ntp ",
					 {
					  "Ref": "ntpServer"
					 },
					 "--tz ",
					 {
					  "Ref": "timezone"
					 },
					 "--dns ${NAME_SERVER}",
					 "--module ltm:nominal",
					 "--metrics \"cloudName:aws,region:${REGION},bigipVersion:13.1.1-0.0.4,customerId:${CUSTOMERID},deploymentId:${DEPLOYMENTID},templateName:f5-prod-stack-same-az-cluster-payg-3nic-bigip.template,templateVersion:4.1.1,licenseType:hourly\"",
					 "--ping",
					 "&>> /var/log/cloud/aws/install.log < /dev/null &"
					]
				   ]
				  },
				  {
				   "Fn::Join": [
					" ",
					[
					 "NAME_SERVER=`/config/cloud/aws/getNameServer.sh eth1`;",
					 "nohup /config/waitThenRun.sh",
					 "f5-rest-node /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/onboard.js",
					 "--install-ilx-package file:///config/cloud/f5-appsvcs-3.5.1-5.noarch.rpm",
					 "--wait-for NETWORK_CONFIG_DONE",
					 "--signal ONBOARD_DONE",
					 "-o /var/log/cloud/aws/onboard.log",
					 "--log-level silly",
					 "--no-reboot",
					 "--host localhost",
					 "--user admin",
					 "--password-url file:///config/cloud/aws/.adminPassword",
					 "--password-encrypted",
					 "--hostname `curl -s -f --retry 20 http://169.254.169.254/latest/meta-data/hostname`",
					 "--ntp ",
					 {
					  "Ref": "ntpServer"
					 },
					 "--tz ",
					 {
					  "Ref": "timezone"
					 },
					 "--dns ${NAME_SERVER}",
					 "--module ltm:nominal",
					 "--ping",
					 "&>> /var/log/cloud/aws/install.log < /dev/null &"
					]
				   ]
				  }
				 ]
				}
			   },
			   "060-custom-config": {
				"command": {
				 "Fn::Join": [
				  " ",
				  [
				   "nohup /config/waitThenRun.sh",
				   "f5-rest-node /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/runScript.js",
				   "--file /config/cloud/aws/custom-config.sh",
				   "--cwd /config/cloud/aws",
				   "-o /var/log/cloud/aws/custom-config.log",
				   "--log-level silly",
				   "--wait-for ONBOARD_DONE",
				   "--signal CUSTOM_CONFIG_DONE",
				   "&>> /var/log/cloud/aws/install.log < /dev/null &"
				  ]
				 ]
				}
			   },
			   "065-cluster": {
				"command": {
				 "Fn::Join": [
				  " ",
				  [
				   "nohup /config/waitThenRun.sh",
				   "f5-rest-node /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/cluster.js",
				   "--wait-for CUSTOM_CONFIG_DONE",
				   "--signal CLUSTER_DONE",
				   "-o /var/log/cloud/aws/cluster.log",
				   "--log-level silly",
				   "--host localhost",
				   "--user admin",
				   "--password-url file:///config/cloud/aws/.adminPassword",
				   "--password-encrypted",
				   "--cloud aws",
				   "--provider-options 's3Bucket:",
				   {
					"Ref": "S3Bucket"
				   },
				   "'",
				   "--config-sync-ip",
				   {
					"Fn::GetAtt": [
					 "Bigip2InternalInterface",
					 "PrimaryPrivateIpAddress"
					]
				   },
				   "--join-group",
				   "--device-group across_az_failover_group",
				   "--remote-host ",
				   {
					"Fn::GetAtt": [
					 "Bigip1ManagementInterface",
					 "PrimaryPrivateIpAddress"
					]
				   },
				   "&>> /var/log/cloud/aws/install.log < /dev/null &"
				  ]
				 ]
				}
			   },
			   "070-rm-password": {
				"command": {
				 "Fn::Join": [
				  " ",
				  [
				   "nohup /config/waitThenRun.sh",
				   "f5-rest-node /config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/runScript.js",
				   "--file /config/cloud/aws/rm-password.sh",
				   "-o /var/log/cloud/aws/rm-password.log",
				   "--log-level silly",
				   "--wait-for CLUSTER_DONE",
				   "--signal PASSWORD_REMOVED",
				   "&>> /var/log/cloud/aws/install.log < /dev/null &"
				  ]
				 ]
				}
			   }
			  },
			  "files": {
			   "/config/cloud/aws/custom-config.sh": {
				"content": {
				 "Fn::Join": [
				  "",
				  [
				   "#!/bin/bash\n",
				   "EXTIP='",
				   {
					"Fn::GetAtt": [
					 "Bigip2subnet1Az1Interface",
					 "PrimaryPrivateIpAddress"
					]
				   },
				   "'\n",
				   "EXTPRIVIP='",
				   {
					"Fn::Select": [
					 "0",
					 {
					  "Fn::GetAtt": [
					   "Bigip2subnet1Az1Interface",
					   "SecondaryPrivateIpAddresses"
					  ]
					 }
					]
				   },
				   "'\n",
				   "HOSTNAME=`curl -s -f --retry 20 http://169.254.169.254/latest/meta-data/hostname`\n",
				   "INTIP='",
				   {
					"Fn::GetAtt": [
					 "Bigip2InternalInterface",
					 "PrimaryPrivateIpAddress"
					]
				   },
				   "'\n",
				   "PROGNAME=$(basename $0)\n",
				   "function error_exit {\n",
				   "echo \"${PROGNAME}: ${1:-\\\"Unknown Error\\\"}\" 1>&2\n",
				   "exit 1\n",
				   "}\n",
				   "declare -a tmsh=()\n",
				   "echo 'starting custom-config.sh'\n",
				   "tmsh+=(\n",
				   "\"tmsh modify sys db dhclient.mgmt { value disable }\"\n",
				   "\"tmsh modify cm device ${HOSTNAME} unicast-address { { effective-ip ${INTIP} effective-port 1026 ip ${INTIP} } }\"\n",
				   "\"tmsh load sys application template /config/cloud/aws/f5.service_discovery.tmpl\"\n",
				   "\"tmsh load sys application template /config/cloud/aws/f5.cloud_logger.v1.0.0.tmpl\"\n",
				   "\"tmsh save /sys config\")\n",
				   "for CMD in \"${tmsh[@]}\"\n",
				   "do\n",
				   "  \"/config/cloud/aws/node_modules/@f5devcentral/f5-cloud-libs/scripts/waitForMcp.sh\"\n",
				   "    if $CMD;then\n",
				   "        echo \"command $CMD successfully executed.\"\n",
				   "    else\n",
				   "        error_exit \"$LINENO: An error has occurred while executing $CMD. Aborting!\"\n",
				   "    fi\n",
				   "done\n",
				   "date\n",
				   "### START CUSTOM CONFIGURTION\n",
				   "### END CUSTOM CONFIGURATION"
				  ]
				 ]
				},
				"group": "root",
				"mode": "000755",
				"owner": "root"
			   },
			   "/config/cloud/aws/f5.cloud_logger.v1.0.0.tmpl": {
				"group": "root",
				"mode": "000755",
				"owner": "root",
				"source": "https://raw.githubusercontent.com/F5Networks/f5-cloud-iapps/v2.2.3/f5-cloud-logger/f5.cloud_logger.v1.0.0.tmpl"
			   },
			   "/config/cloud/aws/f5.service_discovery.tmpl": {
				"group": "root",
				"mode": "000755",
				"owner": "root",
				"source": "https://raw.githubusercontent.com/F5Networks/f5-cloud-iapps/v2.2.3/f5-service-discovery/f5.service_discovery.tmpl"
			   },
			   "/config/cloud/aws/getNameServer.sh": {
				"content": {
				 "Fn::Join": [
				  "\n",
				  [
				   "INTERFACE=$1",
				   "INTERFACE_MAC=`ifconfig ${INTERFACE} | egrep HWaddr | awk '{print tolower($5)}'`",
				   "VPC_CIDR_BLOCK=`curl -s -f --retry 20 http://169.254.169.254/latest/meta-data/network/interfaces/macs/${INTERFACE_MAC}/vpc-ipv4-cidr-block`",
				   "VPC_NET=${VPC_CIDR_BLOCK%/*}",
				   "NAME_SERVER=`echo ${VPC_NET} | awk -F. '{ printf \"%d.%d.%d.%d\", $1, $2, $3, $4+2 }'`",
				   "echo $NAME_SERVER"
				  ]
				 ]
				},
				"group": "root",
				"mode": "000755",
				"owner": "root"
			   },
			   "/config/cloud/aws/rm-password.sh": {
				"content": {
				 "Fn::Join": [
				  "",
				  [
				   "#!/bin/bash\n",
				   "PROGNAME=$(basename $0)\n",
				   "function error_exit {\n",
				   "echo \"${PROGNAME}: ${1:-\"Unknown Error\"}\" 1>&2\n",
				   "exit 1\n",
				   "}\n",
				   "date\n",
				   "echo 'starting rm-password.sh'\n",
				   "declare -a tmsh=()\n",
				   "tmsh+=(\"rm /config/cloud/aws/.adminPassword\")\n",
				   "for CMD in \"${tmsh[@]}\"\n",
				   "do\n",
				   "  if $CMD;then\n",
				   "      echo \"command $CMD successfully executed.\"\n",
				   "  else\n",
				   "      error_exit \"$LINENO: An error has occurred while executing $CMD. Aborting!\"\n",
				   "  fi\n",
				   "done\n",
				   "date\n"
				  ]
				 ]
				},
				"group": "root",
				"mode": "000755",
				"owner": "root"
			   },
			   "/config/cloud/f5-appsvcs-3.5.1-5.noarch.rpm": {
				"group": "root",
				"mode": "000755",
				"owner": "root",
				"source": "https://raw.githubusercontent.com/F5Networks/f5-appsvcs-extension/v3.6.0/dist/lts/f5-appsvcs-3.5.1-5.noarch.rpm"
			   },
			   "/config/cloud/f5-cloud-libs-aws.tar.gz": {
				"group": "root",
				"mode": "000755",
				"owner": "root",
				"source": "https://raw.githubusercontent.com/F5Networks/f5-cloud-libs-aws/v2.4.0/dist/f5-cloud-libs-aws.tar.gz"
			   },
			   "/config/cloud/f5-cloud-libs.tar.gz": {
				"group": "root",
				"mode": "000755",
				"owner": "root",
				"source": "https://raw.githubusercontent.com/F5Networks/f5-cloud-libs/v4.6.0/dist/f5-cloud-libs.tar.gz"
			   },
			   "/config/installCloudLibs.sh": {
				"content": {
				 "Fn::Join": [
				  "\n",
				  [
				   "#!/bin/bash",
				   "echo about to execute",
				   "checks=0",
				   "while [ $checks -lt 120 ]; do echo checking mcpd",
				   "    tmsh -a show sys mcp-state field-fmt | grep -q running",
				   "    if [ $? == 0 ]; then",
				   "        echo mcpd ready",
				   "        break",
				   "    fi",
				   "    echo mcpd not ready yet",
				   "    let checks=checks+1",
				   "    sleep 10",
				   "done",
				   "echo loading verifyHash script",
				   "if ! tmsh load sys config merge file /config/verifyHash; then",
				   "    echo cannot validate signature of /config/verifyHash",
				   "    exit",
				   "fi",
				   "echo loaded verifyHash",
				   "declare -a filesToVerify=(\"/config/cloud/f5-cloud-libs.tar.gz\" \"/config/cloud/f5-cloud-libs-aws.tar.gz\" \"/config/cloud/f5-appsvcs-3.5.1-5.noarch.rpm\"  \"/config/cloud/aws/f5.service_discovery.tmpl\" \"/config/cloud/aws/f5.cloud_logger.v1.0.0.tmpl\")",
				   "for fileToVerify in \"${filesToVerify[@]}\"",
				   "do",
				   "    echo verifying \"$fileToVerify\"",
				   "    if ! tmsh run cli script verifyHash \"$fileToVerify\"; then",
				   "        echo \"$fileToVerify\" is not valid",
				   "        exit 1",
				   "    fi",
				   "    echo verified \"$fileToVerify\"",
				   "done",
				   "mkdir -p /config/cloud/aws/node_modules/@f5devcentral",
				   "echo expanding f5-cloud-libs.tar.gz",
				   "tar xvfz /config/cloud/f5-cloud-libs.tar.gz -C /config/cloud/aws/node_modules/@f5devcentral",
				   "echo installing dependencies",
				   "tar xvfz /config/cloud/f5-cloud-libs-aws.tar.gz -C /config/cloud/aws/node_modules/@f5devcentral",
				   "echo cloud libs install complete",
				   "touch /config/cloud/cloudLibsReady"
				  ]
				 ]
				},
				"group": "root",
				"mode": "000755",
				"owner": "root"
			   },
			   "/config/verifyHash": {
				"content": "cli script /Common/verifyHash {\nproc script::run {} {\n        if {[catch {\n            set hashes(f5-cloud-libs.tar.gz) 535059811324dbda9783df2c4f7ac8405acf6f198efd5696bc0d90f4f8f645b77c04efd42c3dc94261f0b92d76cbae87613412531968a5e646baf4177807b953\n            set hashes(f5-cloud-libs-aws.tar.gz) 076c969cbfff12efacce0879820262b7787c98645f1105667cc4927d4acfe2466ed64c777b6d35957f6df7ae266937dde42fef4c8b1f870020a366f7f910ffb5\n            set hashes(f5-cloud-libs-azure.tar.gz) eea34eb9bf1fc86702cc8d3adcd0cd4cd3e8ede0bad5d85ce55b7248aeb5726583b0314bd1ac9383dbfbf97c79d08d27a473539844de6972c9f6f5fea1a7b9aa\n            set hashes(f5-cloud-libs-gce.tar.gz) 605c13c0725dcf6ee96d24349aee68be59640c58fef16d42d69fe1b01fb2e59df14f2cd41f0718d21061b8fb52cdce57fcf6541ebc8610e54e0f7fe8e46d94cb\n            set hashes(f5-cloud-libs-openstack.tar.gz) 5c83fe6a93a6fceb5a2e8437b5ed8cc9faf4c1621bfc9e6a0779f6c2137b45eab8ae0e7ed745c8cf821b9371245ca29749ca0b7e5663949d77496b8728f4b0f9\n            set hashes(asm-policy-linux.tar.gz) 63b5c2a51ca09c43bd89af3773bbab87c71a6e7f6ad9410b229b4e0a1c483d46f1a9fff39d9944041b02ee9260724027414de592e99f4c2475415323e18a72e0\n            set hashes(f5.http.v1.2.0rc4.tmpl) 47c19a83ebfc7bd1e9e9c35f3424945ef8694aa437eedd17b6a387788d4db1396fefe445199b497064d76967b0d50238154190ca0bd73941298fc257df4dc034\n            set hashes(f5.http.v1.2.0rc6.tmpl) 811b14bffaab5ed0365f0106bb5ce5e4ec22385655ea3ac04de2a39bd9944f51e3714619dae7ca43662c956b5212228858f0592672a2579d4a87769186e2cbfe\n            set hashes(f5.http.v1.2.0rc7.tmpl) 21f413342e9a7a281a0f0e1301e745aa86af21a697d2e6fdc21dd279734936631e92f34bf1c2d2504c201f56ccd75c5c13baa2fe7653213689ec3c9e27dff77d\n            set hashes(f5.aws_advanced_ha.v1.3.0rc1.tmpl) 9e55149c010c1d395abdae3c3d2cb83ec13d31ed39424695e88680cf3ed5a013d626b326711d3d40ef2df46b72d414b4cb8e4f445ea0738dcbd25c4c843ac39d\n            set hashes(f5.aws_advanced_ha.v1.4.0rc1.tmpl) de068455257412a949f1eadccaee8506347e04fd69bfb645001b76f200127668e4a06be2bbb94e10fefc215cfc3665b07945e6d733cbe1a4fa1b88e881590396\n            set hashes(f5.aws_advanced_ha.v1.4.0rc2.tmpl) 6ab0bffc426df7d31913f9a474b1a07860435e366b07d77b32064acfb2952c1f207beaed77013a15e44d80d74f3253e7cf9fbbe12a90ec7128de6facd097d68f\n            set hashes(f5.aws_advanced_ha.v1.4.0rc3.tmpl) 2f2339b4bc3a23c9cfd42aae2a6de39ba0658366f25985de2ea53410a745f0f18eedc491b20f4a8dba8db48970096e2efdca7b8efffa1a83a78e5aadf218b134\n            set hashes(asm-policy.tar.gz) 2d39ec60d006d05d8a1567a1d8aae722419e8b062ad77d6d9a31652971e5e67bc4043d81671ba2a8b12dd229ea46d205144f75374ed4cae58cefa8f9ab6533e6\n            set hashes(deploy_waf.sh) 1a3a3c6274ab08a7dc2cb73aedc8d2b2a23cd9e0eb06a2e1534b3632f250f1d897056f219d5b35d3eed1207026e89989f754840fd92969c515ae4d829214fb74\n            set hashes(f5.policy_creator.tmpl) 06539e08d115efafe55aa507ecb4e443e83bdb1f5825a9514954ef6ca56d240ed00c7b5d67bd8f67b815ee9dd46451984701d058c89dae2434c89715d375a620\n            set hashes(f5.service_discovery.tmpl) 0c43a28d58ff8339891ef324763675c29275170f8984d39298a53f570385eef82bef6d5a273adebb5310fc529faffc9b225358ec8f65100115246915eff706fe\n            set hashes(f5.cloud_logger.v1.0.0.tmpl) 64a0ed3b5e32a037ba4e71d460385fe8b5e1aecc27dc0e8514b511863952e419a89f4a2a43326abb543bba9bc34376afa114ceda950d2c3bd08dab735ff5ad20\n            set hashes(f5-appsvcs-3.5.1-5.noarch.rpm) ba71c6e1c52d0c7077cdb25a58709b8fb7c37b34418a8338bbf67668339676d208c1a4fef4e5470c152aac84020b4ccb8074ce387de24be339711256c0fa78c8\n\n            set file_path [lindex $tmsh::argv 1]\n            set file_name [file tail $file_path]\n\n            if {![info exists hashes($file_name)]} {\n                tmsh::log err \"No hash found for $file_name\"\n                exit 1\n            }\n\n            set expected_hash $hashes($file_name)\n            set computed_hash [lindex [exec /usr/bin/openssl dgst -r -sha512 $file_path] 0]\n            if { $expected_hash eq $computed_hash } {\n                exit 0\n            }\n            tmsh::log err \"Hash does not match for $file_path\"\n            exit 1\n        }]} {\n            tmsh::log err {Unexpected error in verifyHash}\n            exit 1\n        }\n    }\n    script-signature hCr5O6FtvOkjRk8Vn1499YU57spPEMbLXCfkgLVsVcmBCXnHbRw6zTIZOJlGkwk7CyCTpcuVuTR1SiGsQKnclgcQFkEDP5rw98jyIwvKpfYXiLxPI2SPsyadom41FDPXy9+b4aOAJGRPcp5/HhRP7+ky7x6jI5SEF4ZFExN6BwWXn61D+MwYe2Ajhes/6wuZv+b9i9teckZLkyB54OAbEyEug3S66YK2Jg916Y5JLNhDn7JNoOPoyFvYlyuDOutcjFHiwjdSFEgcOx/dka/5aHtjKEiMWuCsuaZnhGKSHc/ZCTH8oht1qUi28Dz5W2Gq6hRE9Zt5S4HmS3JKu2wlfg==\n    signing-key /Common/f5-irule\n}",
				"group": "root",
				"mode": "000755",
				"owner": "root"
			   },
			   "/config/waitThenRun.sh": {
				"content": {
				 "Fn::Join": [
				  "\n",
				  [
				   "#!/bin/bash",
				   "while true; do echo \"waiting for cloud libs install to complete\"",
				   "    if [ -f /config/cloud/cloudLibsReady ]; then",
				   "        break",
				   "    else",
				   "        sleep 10",
				   "    fi",
				   "done",
				   "\"$@\""
				  ]
				 ]
				},
				"group": "root",
				"mode": "000755",
				"owner": "root"
			   }
			  }
			 }
			}
		   },
		   "Properties": {
			"BlockDeviceMappings": [
			 {
			  "DeviceName": "/dev/xvda",
			  "Ebs": {
			   "DeleteOnTermination": "true",
			   "VolumeType": "gp2"
			  }
			 },
			 {
			  "DeviceName": "/dev/xvdb",
			  "NoDevice": {}
			 }
			],
			"IamInstanceProfile": {
			 "Ref": "bigipServiceDiscoveryProfile"
			},
            "ImageId": { "Ref": "BigIpImageId" },
            "InstanceType": "m4.4xlarge",
			"KeyName": {
			 "Ref": "sshKey"
			},
			"NetworkInterfaces": [
			 {
			  "Description": "Management Interface",
			  "DeviceIndex": "0",
			  "NetworkInterfaceId": {
			   "Ref": "Bigip2ManagementInterface"
			  }
			 },
			 {
			  "Description": "Public or External Interface",
			  "DeviceIndex": "1",
			  "NetworkInterfaceId": {
			   "Ref": "Bigip2subnet1Az1Interface"
			  }
			 },
			 {
			  "Description": "Private or Internal Interface",
			  "DeviceIndex": "2",
			  "NetworkInterfaceId": {
			   "Ref": "Bigip2InternalInterface"
			  }
			 }
			],
			"Tags": [
			 {
			  "Key": "Application",
			  "Value": {
			   "Ref": "application"
			  }
			 },
			 {
			  "Key": "Costcenter",
			  "Value": {
			   "Ref": "costcenter"
			  }
			 },
			 {
			  "Key": "Environment",
			  "Value": {
			   "Ref": "environment"
			  }
			 },
			 {
			  "Key": "Group",
			  "Value": {
			   "Ref": "group"
			  }
			 },
			 {
			  "Key": "Name",
			  "Value": {
			   "Fn::Join": [
				"",
				[
				 "SNOPS:Big-IP2: ",
				 {
				  "Ref": "AWS::StackName"
				 }
				]
			   ]
			  }
			 },
			 {
			  "Key": "Owner",
			  "Value": {
			   "Ref": "owner"
			  }
			 }
			],
			"UserData": {
			 "Fn::Base64": {
			  "Fn::Join": [
			   "",
			   [
				"#!/bin/bash\n",
				"/opt/aws/apitools/cfn-init-1.4-0.amzn1/bin/cfn-init -v -s ",
				{
				 "Ref": "AWS::StackId"
				},
				" -r ",
				"Bigip2Instance",
				" --region ",
				{
				 "Ref": "AWS::Region"
				},
				"\n"
			   ]
			  ]
			 }
			}
		   },
		   "Type": "AWS::EC2::Instance"
		  },
		  "Bigip2InternalInterface": {
		   "Properties": {
			"Description": "Internal Interface for the BIG-IP",
			"GroupSet": [
			 {
			  "Ref": "bigipInternalSecurityGroup"
			 }
			],
			"SubnetId": {
			 "Ref": "subnet2Az1"
			}
		   },
		   "Type": "AWS::EC2::NetworkInterface"
		  },
		  "Bigip2ManagementInterface": {
		   "Properties": {
			"Description": "Management Interface for the BIG-IP",
			"GroupSet": [
			 {
			  "Ref": "bigipManagementSecurityGroup"
			 }
			],
			"SubnetId": {
			 "Ref": "managementSubnetAz1"
			}
		   },
		   "Type": "AWS::EC2::NetworkInterface"
		  },
		  "Bigip2subnet1Az1Interface": {
		   "Properties": {
			"Description": "Public External Interface for the BIG-IP",
			"GroupSet": [
			 {
			  "Ref": "AllowAllSecurityGroup"
			 }
			],
			"SecondaryPrivateIpAddressCount": "1",
			"SubnetId": {
			 "Ref": "subnet1Az1"
			}
		   },
		   "Type": "AWS::EC2::NetworkInterface"
		  },
		  "S3Bucket": {
		   "Properties": {
			"AccessControl": "BucketOwnerFullControl"
		   },
		   "Type": "AWS::S3::Bucket"
		  },
		  
		  "bigipExternalSecurityGroup": {
		   "Properties": {
			"GroupDescription": "Public or external interface rules",
			"SecurityGroupIngress": [
			 {
			  "CidrIp": "10.1.0.0/16",
			  "FromPort": "80",
			  "IpProtocol": "tcp",
			  "ToPort": "80"
			 },
			 {
			  "CidrIp": "10.1.0.0/16",
			  "FromPort": "443",
			  "IpProtocol": "tcp",
			  "ToPort": "443"
			 }
			],
			
			"Tags": [
			 {
			  "Key": "Application",
			  "Value": {
			   "Ref": "application"
			  }
			 },
			 {
			  "Key": "Costcenter",
			  "Value": {
			   "Ref": "costcenter"
			  }
			 },
			 {
			  "Key": "Environment",
			  "Value": {
			   "Ref": "environment"
			  }
			 },
			 {
			  "Key": "Group",
			  "Value": {
			   "Ref": "group"
			  }
			 },
			 {
			  "Key": "Name",
			  "Value": {
			   "Fn::Join": [
				"",
				[
				 "Bigip External Security Group:",
				 {
				  "Ref": "AWS::StackName"
				 }
				]
			   ]
			  }
			 },
			 {
			  "Key": "Owner",
			  "Value": {
			   "Ref": "owner"
			  }
			 }
			],
			"VpcId": {
			 "Ref": "VPC"
			}
		   },
		   "Type": "AWS::EC2::SecurityGroup"
		  },
		  
		  
		  
		  "bigipInternalSecurityGroup": {
		   "Properties": {
			"GroupDescription": "Allow All from Intra-VPC only",
			"Tags": [
			 {
			  "Key": "Application",
			  "Value": {
			   "Ref": "application"
			  }
			 },
			 {
			  "Key": "Costcenter",
			  "Value": {
			   "Ref": "costcenter"
			  }
			 },
			 {
			  "Key": "Environment",
			  "Value": {
			   "Ref": "environment"
			  }
			 },
			 {
			  "Key": "Group",
			  "Value": {
			   "Ref": "group"
			  }
			 },
			 {
			  "Key": "Name",
			  "Value": {
			   "Fn::Join": [
				"",
				[
				 "Bigip Internal Security Group:",
				 {
				  "Ref": "AWS::StackName"
				 }
				]
			   ]
			  }
			 },
			 {
			  "Key": "Owner",
			  "Value": {
			   "Ref": "owner"
			  }
			 }
			],
			"VpcId": {
			 "Ref": "VPC"
			}
		   },
		   "Type": "AWS::EC2::SecurityGroup"
		  },
		  
		  
		  "bigipManagementSecurityGroup": {
		   "Properties": {
			"GroupDescription": "BIG-IP management interface policy",
			"SecurityGroupIngress": [
			 {
			  "CidrIp": {
			   "Ref": "restrictedSrcAddress"
			  },
			  "FromPort": "22",
			  "IpProtocol": "tcp",
			  "ToPort": "22"
			 },
			 {
			  "CidrIp": {
			   "Ref": "restrictedSrcAddress"
			  },
			  "FromPort": "443",
			  "IpProtocol": "tcp",
			  "ToPort": "443"
			 }
			],
			"Tags": [
			 {
			  "Key": "Application",
			  "Value": {
			   "Ref": "application"
			  }
			 },
			 {
			  "Key": "Costcenter",
			  "Value": {
			   "Ref": "costcenter"
			  }
			 },
			 {
			  "Key": "Environment",
			  "Value": {
			   "Ref": "environment"
			  }
			 },
			 {
			  "Key": "Group",
			  "Value": {
			   "Ref": "group"
			  }
			 },
			 {
			  "Key": "Name",
			  "Value": {
			   "Fn::Join": [
				"",
				[
				 "Bigip Management Security Group:",
				 {
				  "Ref": "AWS::StackName"
				 }
				]
			   ]
			  }
			 },
			 {
			  "Key": "Owner",
			  "Value": {
			   "Ref": "owner"
			  }
			 }
			],
			"VpcId": {
			 "Ref": "VPC"
			}
		   },
		   "Type": "AWS::EC2::SecurityGroup"
		  },
		  
		  
		  "bigipSecurityGroupIngressConfigSync": {
		   "Properties": {
			"FromPort": "4353",
			"GroupId": {
			 "Ref": "bigipInternalSecurityGroup"
			},
			"IpProtocol": "tcp",
			"SourceSecurityGroupId": {
			 "Ref": "bigipInternalSecurityGroup"
			},
			"ToPort": "4353"
		   },
		   "Type": "AWS::EC2::SecurityGroupIngress"
		  },
		  
		  "bigipSecurityGroupIngressHa": {
		   "Properties": {
			"FromPort": "1026",
			"GroupId": {
			 "Ref": "bigipInternalSecurityGroup"
			},
			"IpProtocol": "udp",
			"SourceSecurityGroupId": {
			 "Ref": "bigipInternalSecurityGroup"
			},
			"ToPort": "1026"
		   },
		   "Type": "AWS::EC2::SecurityGroupIngress"
		  },
		  "bigipSecurityGroupIngressManagmentSame": {
		   "Properties": {
			"FromPort": "443",
			"GroupId": {
			 "Ref": "bigipManagementSecurityGroup"
			},
			"IpProtocol": "tcp",
			"SourceSecurityGroupId": {
			 "Ref": "bigipManagementSecurityGroup"
			},
			"ToPort": "443"
		   },
		   "Type": "AWS::EC2::SecurityGroupIngress"
		  },
		  "bigipServiceDiscoveryAccessRole": {
		   "Properties": {
			"AssumeRolePolicyDocument": {
			 "Statement": [
			  {
			   "Action": [
				"sts:AssumeRole"
			   ],
			   "Effect": "Allow",
			   "Principal": {
				"Service": [
				 "ec2.amazonaws.com"
				]
			   }
			  }
			 ],
			 "Version": "2012-10-17"
			},
			"Path": "/",
			"Policies": [
			 {
			  "PolicyDocument": {
			   "Statement": [
				{
				 "Action": [
				  "ec2:DescribeInstances",
				  "ec2:DescribeInstanceStatus",
				  "ec2:DescribeAddresses",
				  "ec2:AssociateAddress",
				  "ec2:DisassociateAddress",
				  "ec2:DescribeNetworkInterfaces",
				  "ec2:DescribeNetworkInterfaceAttribute",
				  "ec2:DescribeRouteTables",
				  "ec2:ReplaceRoute",
				  "ec2:assignprivateipaddresses",
				  "sts:AssumeRole"
				 ],
				 "Effect": "Allow",
				 "Resource": [
				  "*"
				 ]
				},
				{
				 "Action": [
				  "s3:ListBucket"
				 ],
				 "Effect": "Allow",
				 "Resource": {
				  "Fn::Join": [
				   "",
				   [
					"arn:*:s3:::",
					{
					 "Ref": "S3Bucket"
					}
				   ]
				  ]
				 }
				},
				{
				 "Action": [
				  "s3:PutObject",
				  "s3:GetObject",
				  "s3:DeleteObject"
				 ],
				 "Effect": "Allow",
				 "Resource": {
				  "Fn::Join": [
				   "",
				   [
					"arn:*:s3:::",
					{
					 "Ref": "S3Bucket"
					},
					"/*"
				   ]
				  ]
				 }
				}
			   ],
			   "Version": "2012-10-17"
			  },
			  "PolicyName": "BigipServiceDiscoveryPolicy"
			 }
			]
		   },
		   "Type": "AWS::IAM::Role"
		  },
		  "bigipServiceDiscoveryProfile": {
		   "Properties": {
			"Path": "/",
			"Roles": [
			 {
			  "Ref": "bigipServiceDiscoveryAccessRole"
			 }
			]
		   },
		   "Type": "AWS::IAM::InstanceProfile"
		  }
			
	},
    "Outputs": {
        "JumpHostPublicIP": {
            "Description": "RDP Public IP - recommended to restrict access with Securty Group",
            "Value": {
                "Ref": "WindowsEIP"
            }
        },
        "MstscExeCli": {
            "Description": "MS RDP Client launch command User=Administrator",
            "Value": {
                "Fn::Join": [
                    "",
                    [
                        "mstsc.exe /f /v:",
                        {
                            "Ref": "WindowsEIP"
                        }
                    ]
                ]
            }
        },
        "Region": {
            "Description": "AWS Region",
            "Value": {
                "Ref": "AWS::Region"
            }
        },

	
	  "Bigip1ExternalInterfacePrivateIp": {
	   "Description": "Internally routable IP of the public interface on BIG-IP",
	   "Value": {
		"Fn::GetAtt": [
		 "Bigip1subnet1Az1Interface",
		 "PrimaryPrivateIpAddress"
		]
	   }
	  },
	  "Bigip1InstanceId": {
	   "Description": "Instance Id of BIG-IP in Amazon",
	   "Value": {
		"Ref": "Bigip1Instance"
	   }
	  },
	  "Bigip1InternalInterface": {
	   "Description": "Internal interface ID on BIG-IP",
	   "Value": {
		"Ref": "Bigip1InternalInterface"
	   }
	  },
	  "Bigip1InternalInterfacePrivateIp": {
	   "Description": "Internally routable IP of internal interface on BIG-IP",
	   "Value": {
		"Fn::GetAtt": [
		 "Bigip1InternalInterface",
		 "PrimaryPrivateIpAddress"
		]
	   }
	  },
	  "Bigip1subnet1Az1Interface": {
	   "Description": "External interface Id on BIG-IP",
	   "Value": {
		"Ref": "Bigip1subnet1Az1Interface"
	   }
	  },
	  "Bigip2ExternalInterfacePrivateIp": {
	   "Description": "Internally routable IP of the public interface on BIG-IP",
	   "Value": {
		"Fn::GetAtt": [
		 "Bigip2subnet1Az1Interface",
		 "PrimaryPrivateIpAddress"
		]
	   }
	  },
	  "Bigip2InstanceId": {
	   "Description": "Instance Id of BIG-IP in Amazon",
	   "Value": {
		"Ref": "Bigip2Instance"
	   }
	  },
	  "Bigip2InternalInterface": {
	   "Description": "Internal interface ID on BIG-IP",
	   "Value": {
		"Ref": "Bigip2InternalInterface"
	   }
	  },
	  "Bigip2InternalInterfacePrivateIp": {
	   "Description": "Internally routable IP of internal interface on BIG-IP",
	   "Value": {
		"Fn::GetAtt": [
		 "Bigip2InternalInterface",
		 "PrimaryPrivateIpAddress"
		]
	   }
	  },
	  "Bigip2subnet1Az1Interface": {
	   "Description": "External interface Id on BIG-IP",
	   "Value": {
		"Ref": "Bigip2subnet1Az1Interface"
	   }
	  },
	  "availabilityZone1": {
	   "Description": "Availability Zone",
	   "Value": {
		"Fn::GetAtt": [
		 "Bigip1Instance",
		 "AvailabilityZone"
		]
	   }
	  },
	  "availabilityZone2": {
	   "Description": "Availability Zone",
	   "Value": {
		"Fn::GetAtt": [
		 "Bigip2Instance",
		 "AvailabilityZone"
		]
	   }
	  },
	  "bigipExternalSecurityGroup": {
	   "Description": "Public or External Security Group",
	   "Value": {
		"Ref": "bigipExternalSecurityGroup"
	   }
	  },
	  "bigipInternalSecurityGroup": {
	   "Description": "Private or Internal Security Group",
	   "Value": {
		"Ref": "bigipInternalSecurityGroup"
	   }
	  },
	  "bigipManagementSecurityGroup": {
	   "Description": "Management Security Group",
	   "Value": {
		"Ref": "bigipManagementSecurityGroup"
	   }
	  }
	},

    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
				{
					"Label": {
						"default": "Note: You must first Accept Terms and Conditions for AMI images, eg:"
					},
					"Parameters": []
				},
				{
					"Label": {
						"default": "https://aws.amazon.com/marketplace/search/results?searchTerms=Ubuntu+16.04+LTS+%28HVM%29"
					},
					"Parameters": []
				},
				{
					"Label": {
						"default": "--------------------------------------------------------------------------------------------------------------------------------------------------"
					},
					"Parameters": []
				},
				{
					"Label": {
						"default": "ENVIRONMENT CONFIGURATION"
					},
					"Parameters": [
						"sshKey",
						"BigIpImageId",
						"WindowsImageId",
						"LinuxImageId"
					]
				},
				{
				 "Label": {
				  "default": "INSTANCE CONFIGURATION"
				 },
				 "Parameters": [
				  "restrictedSrcAddress",
				  "ntpServer",
				  "timezone"
				 ]
				},
				{
				 "Label": {
				  "default": "TAGS"
				 },
				 "Parameters": [
				  "application",
				  "environment",
				  "group",
				  "owner",
				  "costcenter"
				 ]
				},
				{},
				{
				 "Label": {
				  "default": "TEMPLATE ANALYTICS"
					 },
					 "Parameters": [
					  "allowUsageAnalytics"
					 ]
					}				
		    ],
			"ParameterLabels": {
				"BigIpImageId": {
					"default": "BigIP PAYG AMI Image Id"
				},
				"WindowsImageId": {
					"default": "Windows Svr 2016 Junphost AMI Image Id"
				},
				"LinuxImageId": {
					"default": "Ubuntu AMI Image Id"
				},

				"additionalNicLocation": {
				 "default": "Additional NIC Location"
				},
				"allowUsageAnalytics": {
				 "default": "Send Anonymous Statistics to F5"
				},
				"application": {
				 "default": "Application"
				},
				"costcenter": {
				 "default": "Cost Center"
				},
				"environment": {
				 "default": "Environment"
				},
				"group": {
				 "default": "Group"
				},

				"ntpServer": {
				 "default": "NTP Server"
				},
				"numberOfAdditionalNics": {
				 "default": "Number Of Additional NICs"
				},
				"owner": {
				 "default": "Owner"
				},
				"restrictedSrcAddress": {
				 "default": "Source Addresses for RDP Access to Jumpbox"
				},
				"sshKey": {
				 "default": "SSH Key"
				},
				"subnet1Az1": {
				 "default": "Subnet1 in AZ1"
				},
				"subnet1Az2": {
				 "default": "Subnet1 in AZ2"
				},
				"subnet2Az1": {
				 "default": "Subnet2 in AZ1"
				},
				"subnet2Az2": {
				 "default": "Subnet2 in AZ2"
				},
				"timezone": {
				 "default": "Timezone (Olsen)"
				}
			
			}
			},
        "AWS::CloudFormation::Designer": {
            "46fd6693-cb22-48d7-bfe1-57cffa1be770": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": -70,
                    "y": 530
                },
                "z": 1,
                "embeds": []
            },
            "610bd400-9f48-4acf-bdf5-95910a384e18": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": -80,
                    "y": 410
                },
                "z": 1,
                "embeds": []
            },
            "a6060b4c-e2f6-41d5-ac4a-7510a08405a6": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 1360,
                    "y": 760
                },
                "z": 1,
                "embeds": []
            },
            "b34cfbdc-cf63-4791-aacc-7feab1316529": {
                "size": {
                    "width": 1170,
                    "height": 930
                },
                "position": {
                    "x": 60,
                    "y": 90
                },
                "z": 1,
                "embeds": [
                    "b6a7b9e3-3763-416a-821d-363ea7c81c0c",
                    "554de484-93ad-4497-b3c4-2b4786757fae",
                    "c328737e-d915-4544-bca7-447950880478",
                    "6bcaea8e-b311-4306-8ddd-cebbcb20670d",
                    "ca65f3c6-e112-4b19-8669-d1dc7df54060",
                    "7b61b9e4-e0b3-45d7-8023-319e59961e54",
                    "6c9ba804-79d7-4236-95f2-f8556ed04429",
                    "42d8ba7a-0d77-448d-a598-b24e76b9a1a3",
                    "7f465369-153a-4d57-9031-5ee45fc694d1"
                ]
            },
            "b6a7b9e3-3763-416a-821d-363ea7c81c0c": {
                "size": {
                    "width": 330,
                    "height": 240
                },
                "position": {
                    "x": 870,
                    "y": 450
                },
                "z": 2,
                "parent": "b34cfbdc-cf63-4791-aacc-7feab1316529",
                "embeds": [
                    "6dbd782d-d62a-4a45-abc5-065eb0b61320",
                    "d45dda00-ac25-4973-976a-dba0a86c71fb"
                ],
                "iscontainedinside": [
                    "b34cfbdc-cf63-4791-aacc-7feab1316529",
                    "b34cfbdc-cf63-4791-aacc-7feab1316529"
                ]
            },
            "b3a8c73b-de2e-409b-ace7-2d27701c4aac": {
                "source": {
                    "id": "b34cfbdc-cf63-4791-aacc-7feab1316529"
                },
                "target": {
                    "id": "46fd6693-cb22-48d7-bfe1-57cffa1be770"
                },
                "z": 1
            },
            "2ef182bf-0023-4e46-9a0f-b43e30ab8892": {
                "source": {
                    "id": "b34cfbdc-cf63-4791-aacc-7feab1316529"
                },
                "target": {
                    "id": "a6060b4c-e2f6-41d5-ac4a-7510a08405a6"
                },
                "z": 1
            },
            "e5fb2572-03fc-4f36-8788-251cfc411ac1": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 1430,
                    "y": 500
                },
                "z": 1,
                "embeds": [],
                "dependson": [
                    "2ef182bf-0023-4e46-9a0f-b43e30ab8892"
                ]
            },
            "6dbd782d-d62a-4a45-abc5-065eb0b61320": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 1110,
                    "y": 500
                },
                "z": 3,
                "parent": "b6a7b9e3-3763-416a-821d-363ea7c81c0c",
                "embeds": [],
                "iscontainedinside": [
                    "b6a7b9e3-3763-416a-821d-363ea7c81c0c",
                    "b6a7b9e3-3763-416a-821d-363ea7c81c0c"
                ]
            },
            "f10ffe67-f450-4ed4-aad2-952aae9787c7": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 1430,
                    "y": 600
                },
                "z": 1,
                "embeds": [],
                "dependson": [
                    "2ef182bf-0023-4e46-9a0f-b43e30ab8892"
                ]
            },
            "554de484-93ad-4497-b3c4-2b4786757fae": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 90,
                    "y": 930
                },
                "z": 2,
                "parent": "b34cfbdc-cf63-4791-aacc-7feab1316529",
                "embeds": [],
                "iscontainedinside": [
                    "b34cfbdc-cf63-4791-aacc-7feab1316529",
                    "b34cfbdc-cf63-4791-aacc-7feab1316529"
                ]
            },
            "c328737e-d915-4544-bca7-447950880478": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 210,
                    "y": 930
                },
                "z": 2,
                "parent": "b34cfbdc-cf63-4791-aacc-7feab1316529",
                "embeds": [],
                "iscontainedinside": [
                    "b34cfbdc-cf63-4791-aacc-7feab1316529",
                    "b34cfbdc-cf63-4791-aacc-7feab1316529"
                ]
            },
            "d45dda00-ac25-4973-976a-dba0a86c71fb": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 920,
                    "y": 600
                },
                "z": 3,
                "parent": "b6a7b9e3-3763-416a-821d-363ea7c81c0c",
                "embeds": [],
                "isassociatedwith": [
                    "c328737e-d915-4544-bca7-447950880478"
                ],
                "iscontainedinside": [
                    "b6a7b9e3-3763-416a-821d-363ea7c81c0c",
                    "b6a7b9e3-3763-416a-821d-363ea7c81c0c"
                ]
            },
            "76924ecb-87a5-45b3-b05a-fbae9563ffe1": {
                "source": {
                    "id": "f10ffe67-f450-4ed4-aad2-952aae9787c7"
                },
                "target": {
                    "id": "d45dda00-ac25-4973-976a-dba0a86c71fb"
                },
                "z": 3
            },
            "6bcaea8e-b311-4306-8ddd-cebbcb20670d": {
                "size": {
                    "width": 240,
                    "height": 240
                },
                "position": {
                    "x": 870,
                    "y": 750
                },
                "z": 2,
                "parent": "b34cfbdc-cf63-4791-aacc-7feab1316529",
                "embeds": [
                    "25613cd5-4b6b-4c86-b941-037552316da1"
                ],
                "iscontainedinside": [
                    "b34cfbdc-cf63-4791-aacc-7feab1316529",
                    "b34cfbdc-cf63-4791-aacc-7feab1316529"
                ]
            },
            "25613cd5-4b6b-4c86-b941-037552316da1": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 900,
                    "y": 810
                },
                "z": 3,
                "parent": "6bcaea8e-b311-4306-8ddd-cebbcb20670d",
                "embeds": [],
                "isassociatedwith": [
                    "a6060b4c-e2f6-41d5-ac4a-7510a08405a6"
                ],
                "iscontainedinside": [
                    "6bcaea8e-b311-4306-8ddd-cebbcb20670d",
                    "6bcaea8e-b311-4306-8ddd-cebbcb20670d"
                ],
                "dependson": [
                    "2ef182bf-0023-4e46-9a0f-b43e30ab8892"
                ]
            },
            "c568ac5c-b88c-4f19-807e-73ca2169aebd": {
                "source": {
                    "id": "6bcaea8e-b311-4306-8ddd-cebbcb20670d"
                },
                "target": {
                    "id": "b6a7b9e3-3763-416a-821d-363ea7c81c0c"
                },
                "z": 2
            },
            "ca65f3c6-e112-4b19-8669-d1dc7df54060": {
                "size": {
                    "width": 240,
                    "height": 240
                },
                "position": {
                    "x": 960,
                    "y": 150
                },
                "z": 2,
                "parent": "b34cfbdc-cf63-4791-aacc-7feab1316529",
                "embeds": [
                    "ee58d574-5215-406a-a330-619c69d68453"
                ],
                "iscontainedinside": [
                    "b34cfbdc-cf63-4791-aacc-7feab1316529",
                    "b34cfbdc-cf63-4791-aacc-7feab1316529"
                ]
            },
            "ee58d574-5215-406a-a330-619c69d68453": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 990,
                    "y": 210
                },
                "z": 3,
                "parent": "ca65f3c6-e112-4b19-8669-d1dc7df54060",
                "embeds": [],
                "isassociatedwith": [
                    "6dbd782d-d62a-4a45-abc5-065eb0b61320"
                ],
                "iscontainedinside": [
                    "ca65f3c6-e112-4b19-8669-d1dc7df54060",
                    "ca65f3c6-e112-4b19-8669-d1dc7df54060"
                ],
                "dependson": [
                    "2ef182bf-0023-4e46-9a0f-b43e30ab8892"
                ]
            },
            "7b61b9e4-e0b3-45d7-8023-319e59961e54": {
                "size": {
                    "width": 330,
                    "height": 240
                },
                "position": {
                    "x": 570,
                    "y": 150
                },
                "z": 2,
                "parent": "b34cfbdc-cf63-4791-aacc-7feab1316529",
                "embeds": [
                    "e0f87b07-a552-4d09-8331-e41ff2bdf3bc",
                    "fbae1785-6f27-435f-9fc5-e51449740473"
                ],
                "iscontainedinside": [
                    "b34cfbdc-cf63-4791-aacc-7feab1316529",
                    "b34cfbdc-cf63-4791-aacc-7feab1316529"
                ]
            },
            "e0f87b07-a552-4d09-8331-e41ff2bdf3bc": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 600,
                    "y": 210
                },
                "z": 3,
                "parent": "7b61b9e4-e0b3-45d7-8023-319e59961e54",
                "embeds": [],
                "iscontainedinside": [
                    "7b61b9e4-e0b3-45d7-8023-319e59961e54",
                    "7b61b9e4-e0b3-45d7-8023-319e59961e54"
                ]
            },
            "fbae1785-6f27-435f-9fc5-e51449740473": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 720,
                    "y": 210
                },
                "z": 3,
                "parent": "7b61b9e4-e0b3-45d7-8023-319e59961e54",
                "embeds": [],
                "iscontainedinside": [
                    "7b61b9e4-e0b3-45d7-8023-319e59961e54",
                    "7b61b9e4-e0b3-45d7-8023-319e59961e54"
                ]
            },
            "6c9ba804-79d7-4236-95f2-f8556ed04429": {
                "size": {
                    "width": 420,
                    "height": 330
                },
                "position": {
                    "x": 90,
                    "y": 150
                },
                "z": 2,
                "parent": "b34cfbdc-cf63-4791-aacc-7feab1316529",
                "embeds": [
                    "8d068f1c-6e86-4005-a5e7-f5fd1ebf1b94",
                    "9611e2c3-9e3c-4dc5-802a-b18a959cad07",
                    "e74bcd48-3914-48ed-9f85-935733a287eb",
                    "1ca78246-08cd-40f6-9587-b232a47d62e3",
                    "bcbfaa42-bbbb-47a4-b4f6-b17cbdecf640"
                ],
                "iscontainedinside": [
                    "b34cfbdc-cf63-4791-aacc-7feab1316529",
                    "b34cfbdc-cf63-4791-aacc-7feab1316529"
                ]
            },
            "664d9cf3-1458-456b-96bc-2535681629e3": {
                "source": {
                    "id": "7b61b9e4-e0b3-45d7-8023-319e59961e54"
                },
                "target": {
                    "id": "6c9ba804-79d7-4236-95f2-f8556ed04429"
                },
                "z": 2
            },
            "8d068f1c-6e86-4005-a5e7-f5fd1ebf1b94": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 120,
                    "y": 210
                },
                "z": 3,
                "parent": "6c9ba804-79d7-4236-95f2-f8556ed04429",
                "embeds": [],
                "iscontainedinside": [
                    "6c9ba804-79d7-4236-95f2-f8556ed04429",
                    "6c9ba804-79d7-4236-95f2-f8556ed04429"
                ]
            },
            "9611e2c3-9e3c-4dc5-802a-b18a959cad07": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 240,
                    "y": 210
                },
                "z": 3,
                "parent": "6c9ba804-79d7-4236-95f2-f8556ed04429",
                "embeds": [],
                "iscontainedinside": [
                    "6c9ba804-79d7-4236-95f2-f8556ed04429",
                    "6c9ba804-79d7-4236-95f2-f8556ed04429"
                ]
            },
            "e74bcd48-3914-48ed-9f85-935733a287eb": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 120,
                    "y": 330
                },
                "z": 3,
                "parent": "6c9ba804-79d7-4236-95f2-f8556ed04429",
                "embeds": [],
                "iscontainedinside": [
                    "6c9ba804-79d7-4236-95f2-f8556ed04429",
                    "6c9ba804-79d7-4236-95f2-f8556ed04429"
                ]
            },
            "cd784f93-66ae-4d9f-a87e-547342663695": {
                "source": {
                    "id": "d45dda00-ac25-4973-976a-dba0a86c71fb"
                },
                "target": {
                    "id": "e74bcd48-3914-48ed-9f85-935733a287eb"
                },
                "z": 3
            },
            "1ca78246-08cd-40f6-9587-b232a47d62e3": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 240,
                    "y": 330
                },
                "z": 3,
                "parent": "6c9ba804-79d7-4236-95f2-f8556ed04429",
                "embeds": [],
                "iscontainedinside": [
                    "6c9ba804-79d7-4236-95f2-f8556ed04429",
                    "6c9ba804-79d7-4236-95f2-f8556ed04429"
                ]
            },
            "bcbfaa42-bbbb-47a4-b4f6-b17cbdecf640": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 360,
                    "y": 210
                },
                "z": 3,
                "parent": "6c9ba804-79d7-4236-95f2-f8556ed04429",
                "embeds": [],
                "iscontainedinside": [
                    "6c9ba804-79d7-4236-95f2-f8556ed04429",
                    "6c9ba804-79d7-4236-95f2-f8556ed04429"
                ]
            },
            "006ab98a-856c-4e89-9800-a19876f6abe5": {
                "source": {
                    "id": "ca65f3c6-e112-4b19-8669-d1dc7df54060"
                },
                "target": {
                    "id": "6c9ba804-79d7-4236-95f2-f8556ed04429"
                },
                "z": 2
            },
            "42d8ba7a-0d77-448d-a598-b24e76b9a1a3": {
                "size": {
                    "width": 330,
                    "height": 330
                },
                "position": {
                    "x": 480,
                    "y": 540
                },
                "z": 2,
                "parent": "b34cfbdc-cf63-4791-aacc-7feab1316529",
                "embeds": [
                    "40161fc8-4f72-4b9b-9772-5ef31887ba18",
                    "2259598d-a29e-49b9-95df-8a5acf009e24",
                    "7f51220a-eab1-4acc-b7b0-042a45acdb89",
                    "6b2761b5-9a83-4ea3-a6c6-ccf6b6bbcbca"
                ],
                "iscontainedinside": [
                    "b34cfbdc-cf63-4791-aacc-7feab1316529",
                    "b34cfbdc-cf63-4791-aacc-7feab1316529"
                ]
            },
            "a9f029bb-18e5-4385-a1fc-0929027a987c": {
                "source": {
                    "id": "7b61b9e4-e0b3-45d7-8023-319e59961e54"
                },
                "target": {
                    "id": "42d8ba7a-0d77-448d-a598-b24e76b9a1a3"
                },
                "z": 2
            },
            "40161fc8-4f72-4b9b-9772-5ef31887ba18": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 510,
                    "y": 600
                },
                "z": 3,
                "parent": "42d8ba7a-0d77-448d-a598-b24e76b9a1a3",
                "embeds": [],
                "isassociatedwith": [
                    "554de484-93ad-4497-b3c4-2b4786757fae"
                ],
                "iscontainedinside": [
                    "42d8ba7a-0d77-448d-a598-b24e76b9a1a3",
                    "42d8ba7a-0d77-448d-a598-b24e76b9a1a3"
                ]
            },
            "6640276b-3fa5-4de5-9aed-79c32c10c84e": {
                "source": {
                    "id": "40161fc8-4f72-4b9b-9772-5ef31887ba18"
                },
                "target": {
                    "id": "e74bcd48-3914-48ed-9f85-935733a287eb"
                },
                "z": 3
            },
            "2259598d-a29e-49b9-95df-8a5acf009e24": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 630,
                    "y": 600
                },
                "z": 3,
                "parent": "42d8ba7a-0d77-448d-a598-b24e76b9a1a3",
                "embeds": [],
                "isassociatedwith": [
                    "554de484-93ad-4497-b3c4-2b4786757fae"
                ],
                "iscontainedinside": [
                    "42d8ba7a-0d77-448d-a598-b24e76b9a1a3",
                    "42d8ba7a-0d77-448d-a598-b24e76b9a1a3"
                ]
            },
            "98592b5b-62a7-4a73-9c30-9efa336ebdc2": {
                "source": {
                    "id": "2259598d-a29e-49b9-95df-8a5acf009e24"
                },
                "target": {
                    "id": "1ca78246-08cd-40f6-9587-b232a47d62e3"
                },
                "z": 3
            },
            "7f51220a-eab1-4acc-b7b0-042a45acdb89": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 510,
                    "y": 720
                },
                "z": 3,
                "parent": "42d8ba7a-0d77-448d-a598-b24e76b9a1a3",
                "embeds": [],
                "isassociatedwith": [
                    "554de484-93ad-4497-b3c4-2b4786757fae"
                ],
                "iscontainedinside": [
                    "42d8ba7a-0d77-448d-a598-b24e76b9a1a3",
                    "42d8ba7a-0d77-448d-a598-b24e76b9a1a3"
                ]
            },
            "05cf2c09-c405-4f37-bbe1-830bd05b550e": {
                "source": {
                    "id": "7f51220a-eab1-4acc-b7b0-042a45acdb89"
                },
                "target": {
                    "id": "bcbfaa42-bbbb-47a4-b4f6-b17cbdecf640"
                },
                "z": 3
            },
            "6b2761b5-9a83-4ea3-a6c6-ccf6b6bbcbca": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 630,
                    "y": 720
                },
                "z": 3,
                "parent": "42d8ba7a-0d77-448d-a598-b24e76b9a1a3",
                "embeds": [],
                "isassociatedwith": [
                    "554de484-93ad-4497-b3c4-2b4786757fae"
                ],
                "iscontainedinside": [
                    "42d8ba7a-0d77-448d-a598-b24e76b9a1a3",
                    "42d8ba7a-0d77-448d-a598-b24e76b9a1a3"
                ]
            },
            "6ff2a6a0-6b25-410a-b638-b6863f9d07c0": {
                "source": {
                    "id": "6b2761b5-9a83-4ea3-a6c6-ccf6b6bbcbca"
                },
                "target": {
                    "id": "9611e2c3-9e3c-4dc5-802a-b18a959cad07"
                },
                "z": 3
            },
            "a34ee59f-0bae-461d-ac3b-002e90e25cfe": {
                "source": {
                    "id": "ca65f3c6-e112-4b19-8669-d1dc7df54060"
                },
                "target": {
                    "id": "42d8ba7a-0d77-448d-a598-b24e76b9a1a3"
                },
                "z": 2
            },
            "7f465369-153a-4d57-9031-5ee45fc694d1": {
                "size": {
                    "width": 330,
                    "height": 330
                },
                "position": {
                    "x": 90,
                    "y": 540
                },
                "z": 2,
                "parent": "b34cfbdc-cf63-4791-aacc-7feab1316529",
                "embeds": [
                    "a4174ee7-2ad7-499b-aa37-55465a0bcebe",
                    "dc3f0a96-d410-4fac-8fc2-dd50151835de",
                    "c60c5e50-7460-407f-bc95-7c249ec2ebae"
                ],
                "iscontainedinside": [
                    "b34cfbdc-cf63-4791-aacc-7feab1316529",
                    "b34cfbdc-cf63-4791-aacc-7feab1316529"
                ]
            },
            "04431737-6e9b-4f5e-a2bd-b6ab63685d17": {
                "source": {
                    "id": "7b61b9e4-e0b3-45d7-8023-319e59961e54"
                },
                "target": {
                    "id": "7f465369-153a-4d57-9031-5ee45fc694d1"
                },
                "z": 2
            },
            "a4174ee7-2ad7-499b-aa37-55465a0bcebe": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 120,
                    "y": 600
                },
                "z": 3,
                "parent": "7f465369-153a-4d57-9031-5ee45fc694d1",
                "embeds": [],
                "isassociatedwith": [
                    "554de484-93ad-4497-b3c4-2b4786757fae"
                ],
                "iscontainedinside": [
                    "7f465369-153a-4d57-9031-5ee45fc694d1",
                    "7f465369-153a-4d57-9031-5ee45fc694d1"
                ]
            },
            "0190535d-c179-4ba5-8c01-868e07168cc6": {
                "source": {
                    "id": "a4174ee7-2ad7-499b-aa37-55465a0bcebe"
                },
                "target": {
                    "id": "e74bcd48-3914-48ed-9f85-935733a287eb"
                },
                "z": 3
            },
            "dc3f0a96-d410-4fac-8fc2-dd50151835de": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 240,
                    "y": 600
                },
                "z": 3,
                "parent": "7f465369-153a-4d57-9031-5ee45fc694d1",
                "embeds": [],
                "isassociatedwith": [
                    "554de484-93ad-4497-b3c4-2b4786757fae"
                ],
                "iscontainedinside": [
                    "7f465369-153a-4d57-9031-5ee45fc694d1",
                    "7f465369-153a-4d57-9031-5ee45fc694d1"
                ]
            },
            "12387af5-15ca-4eb5-9a06-7d362ea1679e": {
                "source": {
                    "id": "dc3f0a96-d410-4fac-8fc2-dd50151835de"
                },
                "target": {
                    "id": "bcbfaa42-bbbb-47a4-b4f6-b17cbdecf640"
                },
                "z": 3
            },
            "c60c5e50-7460-407f-bc95-7c249ec2ebae": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 120,
                    "y": 720
                },
                "z": 3,
                "parent": "7f465369-153a-4d57-9031-5ee45fc694d1",
                "embeds": [],
                "isassociatedwith": [
                    "554de484-93ad-4497-b3c4-2b4786757fae"
                ],
                "iscontainedinside": [
                    "7f465369-153a-4d57-9031-5ee45fc694d1",
                    "7f465369-153a-4d57-9031-5ee45fc694d1"
                ]
            },
            "94529d60-e8d7-4718-8e2f-6d054a616e4a": {
                "source": {
                    "id": "c60c5e50-7460-407f-bc95-7c249ec2ebae"
                },
                "target": {
                    "id": "1ca78246-08cd-40f6-9587-b232a47d62e3"
                },
                "z": 3
            },
            "3f665185-7a7a-4cab-bcca-0701153a8210": {
                "source": {
                    "id": "ca65f3c6-e112-4b19-8669-d1dc7df54060"
                },
                "target": {
                    "id": "7f465369-153a-4d57-9031-5ee45fc694d1"
                },
                "z": 2
            }
        }
    }
}